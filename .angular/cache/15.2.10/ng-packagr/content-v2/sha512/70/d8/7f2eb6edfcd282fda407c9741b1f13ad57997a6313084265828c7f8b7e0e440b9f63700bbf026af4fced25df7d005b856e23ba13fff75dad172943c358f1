{"hash":"a5db75709d9bc2cdef83001f81e417c420114eb9","fesm2020":[{"exports":["MatCarouselComponent","MatCarouselHammerConfig","MatCarouselModule","MatCarouselSlideComponent"],"facadeModuleId":"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/ng-mat-carousel.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel-slide/carousel-slide.component.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.component.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.module.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel-slide/carousel-slide.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/public_api.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/ng-mat-carousel.mjs"],"name":"ng-mat-carousel","type":"chunk","dynamicImports":[],"fileName":"ng-mat-carousel.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/animations":["animate","style","*"],"@angular/cdk/a11y":["ListKeyManager"],"@angular/common":["*","isPlatformBrowser","CommonModule"],"@angular/core":["*","TemplateRef","Component","Input","ViewChild","EventEmitter","PLATFORM_ID","Inject","Output","ContentChildren","HostListener","Injectable","NgModule"],"rxjs":["Subject","BehaviorSubject","interval"],"rxjs/operators":["takeUntil","filter"],"@angular/platform-browser":["*","HammerGestureConfig","HAMMER_GESTURE_CONFIG","HammerModule"],"@angular/material/button":["*","MatButtonModule"],"@angular/material/icon":["*","MatIconModule"]},"imports":["@angular/animations","@angular/cdk/a11y","@angular/common","@angular/core","rxjs","rxjs/operators","@angular/platform-browser","@angular/material/button","@angular/material/icon"],"modules":{"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel-slide/carousel-slide.component.mjs":{"code":"function MatCarouselSlideComponent_ng_template_0_div_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 3);\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r1.overlayColor);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel);\n} }\nfunction MatCarouselSlideComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MatCarouselSlideComponent_ng_template_0_div_3_Template, 1, 3, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"background-image\", ctx_r0.image);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.hideOverlay);\n} }\nconst _c0$1 = [\"*\"];\nclass MatCarouselSlideComponent {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n        this.overlayColor = '#00000040';\n        this.hideOverlay = false;\n        this.ariaLabel = '';\n        this.disabled = false; // implements ListKeyManagerOption\n        this.load = false;\n    }\n    ngOnInit() {\n        if (this.image) {\n            this.image = this.sanitizer.bypassSecurityTrustStyle(`url(\"${this.image}\")`);\n        }\n    }\n}\n/** @nocollapse */ MatCarouselSlideComponent.ɵfac = function MatCarouselSlideComponent_Factory(t) { return new (t || MatCarouselSlideComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer)); };\n/** @nocollapse */ MatCarouselSlideComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MatCarouselSlideComponent, selectors: [[\"mat-carousel-slide\"]], viewQuery: function MatCarouselSlideComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { image: \"image\", overlayColor: \"overlayColor\", hideOverlay: \"hideOverlay\", ariaLabel: \"ariaLabel\", disabled: \"disabled\", load: \"load\" }, ngContentSelectors: _c0$1, decls: 1, vars: 0, consts: [[1, \"carousel-slide\"], [1, \"carousel-slide-content\"], [\"class\", \"carousel-slide-overlay\", 3, \"background-color\", 4, \"ngIf\"], [1, \"carousel-slide-overlay\"]], template: function MatCarouselSlideComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatCarouselSlideComponent_ng_template_0_Template, 4, 3, \"ng-template\");\n    } }, dependencies: [i2.NgIf], styles: [\".carousel-slide[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:1}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselSlideComponent, [{\n        type: Component,\n        args: [{ selector: 'mat-carousel-slide', template: \"<ng-template>\\n  <div class=\\\"carousel-slide\\\" [style.background-image]=\\\"image\\\">\\n    <div class=\\\"carousel-slide-content\\\"><ng-content></ng-content></div>\\n    <div\\n      *ngIf=\\\"!hideOverlay\\\"\\n      class=\\\"carousel-slide-overlay\\\"\\n      [attr.aria-label] = \\\"ariaLabel\\\"\\n      [style.background-color]=\\\"overlayColor\\\"\\n    ></div>\\n  </div>\\n</ng-template>\\n\", styles: [\".carousel-slide{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content{width:100%;height:100%;position:absolute;z-index:1}\\n\"] }]\n    }], function () { return [{ type: i1.DomSanitizer }]; }, { image: [{\n            type: Input\n        }], overlayColor: [{\n            type: Input\n        }], hideOverlay: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], load: [{\n            type: Input\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }] }); })();","originalLength":8016,"removedExports":[],"renderedExports":["MatCarouselSlideComponent"],"renderedLength":4165},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.component.mjs":{"code":"const _c0 = [\"carouselContainer\"];\nconst _c1 = [\"carouselList\"];\nfunction MatCarouselComponent_li_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainer(0, 11);\n} if (rf & 2) {\n    const slide_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngTemplateOutlet\", slide_r6.templateRef);\n} }\nfunction MatCarouselComponent_li_4_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 8, 9);\n    i0.ɵɵlistener(\"panleft\", function MatCarouselComponent_li_4_Template_li_panleft_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.onPan($event, _r7)); })(\"panright\", function MatCarouselComponent_li_4_Template_li_panright_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r12 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r12.onPan($event, _r7)); })(\"panend\", function MatCarouselComponent_li_4_Template_li_panend_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.onPanEnd($event, _r7)); })(\"pancancel\", function MatCarouselComponent_li_4_Template_li_pancancel_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r14 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r14.onPanEnd($event, _r7)); });\n    i0.ɵɵtemplate(2, MatCarouselComponent_li_4_ng_container_2_Template, 1, 1, \"ng-container\", 10);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const slide_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"padding-bottom\", ctx_r2.maintainAspectRatio && ctx_r2.proportion ? ctx_r2.proportion + \"%\" : \"0px\")(\"height\", !ctx_r2.maintainAspectRatio && ctx_r2.slideHeight ? ctx_r2.slideHeight : \"0px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", slide_r6.load);\n} }\nfunction MatCarouselComponent_button_5_mat_icon_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 15);\n} if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r15.svgIconOverrides.arrowBack);\n} }\nfunction MatCarouselComponent_button_5_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"arrow_back\");\n    i0.ɵɵelementEnd();\n} }\nfunction MatCarouselComponent_button_5_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function MatCarouselComponent_button_5_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r18.previous()); });\n    i0.ɵɵtemplate(1, MatCarouselComponent_button_5_mat_icon_1_Template, 1, 1, \"mat-icon\", 13);\n    i0.ɵɵtemplate(2, MatCarouselComponent_button_5_ng_template_2_Template, 2, 0, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r16 = i0.ɵɵreference(3);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r3.color)(\"disabled\", !ctx_r3.loop && ctx_r3.currentIndex == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.svgIconOverrides == null ? null : ctx_r3.svgIconOverrides.arrowBack)(\"ngIfElse\", _r16);\n} }\nfunction MatCarouselComponent_button_6_mat_icon_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 15);\n} if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r20.svgIconOverrides.arrowForward);\n} }\nfunction MatCarouselComponent_button_6_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"arrow_forward\");\n    i0.ɵɵelementEnd();\n} }\nfunction MatCarouselComponent_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function MatCarouselComponent_button_6_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r24); const ctx_r23 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r23.next()); });\n    i0.ɵɵtemplate(1, MatCarouselComponent_button_6_mat_icon_1_Template, 1, 1, \"mat-icon\", 13);\n    i0.ɵɵtemplate(2, MatCarouselComponent_button_6_ng_template_2_Template, 2, 0, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r21 = i0.ɵɵreference(3);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r4.color)(\"disabled\", !ctx_r4.loop && ctx_r4.currentIndex == ctx_r4.slidesList.length - 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.svgIconOverrides == null ? null : ctx_r4.svgIconOverrides.arrowForward)(\"ngIfElse\", _r21);\n} }\nfunction MatCarouselComponent_div_7_button_1_Template(rf, ctx) { if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function MatCarouselComponent_div_7_button_1_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const i_r27 = restoredCtx.index; const ctx_r28 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r28.slideTo(i_r27)); })(\"focus\", function MatCarouselComponent_div_7_button_1_Template_button_focus_0_listener() { i0.ɵɵrestoreView(_r29); i0.ɵɵnextContext(2); const _r0 = i0.ɵɵreference(1); return i0.ɵɵresetView(_r0.focus()); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const i_r27 = ctx.index;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"color\", ctx_r25.color)(\"disabled\", i_r27 == ctx_r25.currentIndex);\n    i0.ɵɵattribute(\"aria-label\", \"Slide #\" + i_r27);\n} }\nfunction MatCarouselComponent_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, MatCarouselComponent_div_7_button_1_Template, 1, 3, \"button\", 19);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"flex-direction\", ctx_r5.orientation === \"rtl\" ? \"row-reverse\" : \"row\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.slidesList);\n} }\nvar Direction;\n(function (Direction) {\n    Direction[Direction[\"left\"] = 0] = \"left\";\n    Direction[Direction[\"right\"] = 1] = \"right\";\n    Direction[Direction[\"index\"] = 2] = \"index\";\n})(Direction || (Direction = {}));\nclass MatCarouselComponent {\n    set autoplay(value) {\n        this.autoplay$.next(value);\n        this._autoplay = value;\n    }\n    set interval(value) {\n        this.interval$.next(value);\n    }\n    get loop() {\n        return this._loop;\n    }\n    set loop(value) {\n        this.loop$.next(value);\n        this._loop = value;\n    }\n    get maxWidth() {\n        return this._maxWidth;\n    }\n    set maxWidth(value) {\n        this._maxWidth = value;\n        this.maxWidth$.next();\n    }\n    set slides(value) {\n        this.slides$.next(value);\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this.orientation$.next(value);\n        this._orientation = value;\n    }\n    get currentIndex() {\n        if (this.listKeyManager) {\n            return this.listKeyManager.activeItemIndex;\n        }\n        return 0;\n    }\n    get currentSlide() {\n        if (this.listKeyManager) {\n            return this.listKeyManager.activeItem;\n        }\n        return null;\n    }\n    constructor(animationBuilder, renderer, platformId) {\n        this.animationBuilder = animationBuilder;\n        this.renderer = renderer;\n        this.platformId = platformId;\n        this.timings = '250ms ease-in';\n        this.lazyLoad = false;\n        this.hideArrows = true;\n        this.hideIndicators = true;\n        this.ariaLabel = 'Sliding carousel';\n        this.color = 'accent';\n        this.maintainAspectRatio = true;\n        this.proportion = 25;\n        this.slideHeight = '100%';\n        this.useKeyboard = false;\n        this.useMouseWheel = false;\n        this.changeEmitter = new EventEmitter();\n        this._autoplay = true;\n        this.autoplay$ = new Subject();\n        this.interval$ = new BehaviorSubject(5000);\n        this.slides$ = new BehaviorSubject(null);\n        this._maxWidth = 'auto';\n        this.maxWidth$ = new Subject();\n        this._loop = true;\n        this.loop$ = new Subject();\n        this._orientation = 'ltr';\n        this.orientation$ = new Subject();\n        this.timerStop$ = new Subject();\n        this.destroy$ = new Subject();\n        this.playing = false;\n    }\n    onKeyUp(event) {\n        if (this.useKeyboard && !this.playing) {\n            this.listKeyManager.onKeydown(event);\n        }\n    }\n    onMouseEnter() {\n        this.stopTimer();\n    }\n    onMouseLeave() {\n        this.startTimer(this._autoplay);\n    }\n    onMouseWheel(event) {\n        if (this.useMouseWheel) {\n            event.preventDefault(); // prevent window to scroll\n            const deltaY = Math.sign(event.deltaY);\n            if (deltaY > 0) {\n                this.next();\n            }\n            else if (deltaY < 0) {\n                this.previous();\n            }\n        }\n    }\n    onResize(event) {\n        // Reset carousel when width is resized\n        // in order to avoid major glitches.\n        const w = this.getWidth();\n        if (w !== this.width) {\n            this.width = w;\n            this.slideTo(0);\n        }\n    }\n    ngAfterContentInit() {\n        if (!this.lazyLoad) {\n            this.slidesList.forEach((slide) => slide.load = true);\n        }\n        else {\n            this.slidesList.first.load = true;\n            setTimeout(() => {\n                this.slidesList.find((s, i) => i === 1 % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === (this.slidesList.length - 1) % this.slidesList.length).load = true;\n            }, this.interval$.getValue() / 2);\n        }\n        this.listKeyManager = new ListKeyManager(this.slidesList)\n            .withVerticalOrientation(false)\n            .withHorizontalOrientation(this._orientation)\n            .withWrap(this._loop);\n        this.listKeyManager.updateActiveItem(0);\n        this.listKeyManager.change\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.playAnimation());\n    }\n    ngAfterViewInit() {\n        this.width = this.getWidth();\n        this.autoplay$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n            this.stopTimer();\n            this.startTimer(value);\n        });\n        this.interval$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n            this.stopTimer();\n            this.resetTimer(value);\n            this.startTimer(this._autoplay);\n        });\n        this.maxWidth$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.slideTo(0));\n        this.loop$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => this.listKeyManager.withWrap(value));\n        this.orientation$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => this.listKeyManager.withHorizontalOrientation(value));\n        this.slides$\n            .pipe(takeUntil(this.destroy$), filter(value => value && value < this.slidesList.length))\n            .subscribe(value => this.resetSlides(value));\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    next() {\n        this.goto(Direction.right);\n    }\n    previous() {\n        this.goto(Direction.left);\n    }\n    slideTo(index) {\n        this.goto(Direction.index, index);\n    }\n    onPan(event, slideElem) {\n        // https://github.com/angular/angular/issues/10541#issuecomment-346539242\n        // if y velocity is greater, it's a panup/pandown, so ignore.\n        if (Math.abs(event.velocityY) > Math.abs(event.velocityX)) {\n            return;\n        }\n        let deltaX = event.deltaX;\n        if (this.isOutOfBounds()) {\n            deltaX *= 0.2; // decelerate movement;\n        }\n        this.renderer.setStyle(slideElem, 'cursor', 'grabbing');\n        this.renderer.setStyle(this.carouselList.nativeElement, 'transform', this.getTranslation(this.getOffset() + deltaX));\n    }\n    onPanEnd(event, slideElem) {\n        this.renderer.removeStyle(slideElem, 'cursor');\n        if (!this.isOutOfBounds() &&\n            Math.abs(event.deltaX) > this.getWidth() * 0.25) {\n            if (event.deltaX <= 0) {\n                this.next();\n                return;\n            }\n            this.previous();\n            return;\n        }\n        this.playAnimation(); // slide back, don't change current index\n    }\n    isOutOfBounds() {\n        const sign = this.orientation === 'rtl' ? -1 : 1;\n        const left = sign *\n            (this.carouselList.nativeElement.getBoundingClientRect().left -\n                this.carouselList.nativeElement.offsetParent.getBoundingClientRect()\n                    .left);\n        const lastIndex = this.slidesList.length - 1;\n        const width = -this.getWidth() * lastIndex;\n        return ((this.listKeyManager.activeItemIndex === 0 && left >= 0) ||\n            (this.listKeyManager.activeItemIndex === lastIndex && left <= width));\n    }\n    isVisible() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return false;\n        }\n        const elem = this.carouselContainer.nativeElement;\n        const docViewTop = window.pageYOffset;\n        const docViewBottom = docViewTop + window.innerHeight;\n        const elemOffset = elem.getBoundingClientRect();\n        const elemTop = docViewTop + elemOffset.top;\n        const elemBottom = elemTop + elemOffset.height;\n        return elemBottom <= docViewBottom || elemTop >= docViewTop;\n    }\n    getOffset() {\n        const offset = this.listKeyManager.activeItemIndex * this.getWidth();\n        const sign = this.orientation === 'rtl' ? 1 : -1;\n        return sign * offset;\n    }\n    getTranslation(offset) {\n        return `translateX(${offset}px)`;\n    }\n    getWidth() {\n        return this.carouselContainer.nativeElement.clientWidth;\n    }\n    goto(direction, index) {\n        if (!this.playing) {\n            const rtl = this.orientation === 'rtl';\n            switch (direction) {\n                case Direction.left:\n                    return rtl\n                        ? this.listKeyManager.setNextItemActive()\n                        : this.listKeyManager.setPreviousItemActive();\n                case Direction.right:\n                    return rtl\n                        ? this.listKeyManager.setPreviousItemActive()\n                        : this.listKeyManager.setNextItemActive();\n                case Direction.index:\n                    return this.listKeyManager.setActiveItem(index);\n            }\n        }\n    }\n    playAnimation() {\n        const translation = this.getTranslation(this.getOffset());\n        const factory = this.animationBuilder.build(animate(this.timings, style({ transform: translation })));\n        const animation = factory.create(this.carouselList.nativeElement);\n        animation.onStart(() => {\n            this.playing = true;\n        });\n        animation.onDone(() => {\n            this.changeEmitter.emit(this.currentIndex);\n            this.playing = false;\n            if (this.lazyLoad) {\n                this.slidesList.find((s, i) => i === (this.currentIndex + 1) % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === (this.currentIndex - 1 + this.slidesList.length) % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === this.currentIndex).load = true;\n            }\n            this.renderer.setStyle(this.carouselList.nativeElement, 'transform', translation);\n            animation.destroy();\n        });\n        animation.play();\n    }\n    resetSlides(slides) {\n        this.slidesList.reset(this.slidesList.toArray().slice(0, slides));\n    }\n    resetTimer(value) {\n        this.timer$ = interval(value);\n    }\n    startTimer(autoplay) {\n        if (!autoplay) {\n            return;\n        }\n        this.timer$\n            .pipe(takeUntil(this.timerStop$), takeUntil(this.destroy$), filter(() => this.isVisible()))\n            .subscribe(() => {\n            this.listKeyManager.withWrap(true).setNextItemActive();\n            this.listKeyManager.withWrap(this.loop);\n        });\n    }\n    stopTimer() {\n        this.timerStop$.next();\n    }\n}\n/** @nocollapse */ MatCarouselComponent.ɵfac = function MatCarouselComponent_Factory(t) { return new (t || MatCarouselComponent)(i0.ɵɵdirectiveInject(i1$1.AnimationBuilder), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID)); };\n/** @nocollapse */ MatCarouselComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MatCarouselComponent, selectors: [[\"mat-carousel\"]], contentQueries: function MatCarouselComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatCarouselSlideComponent, 4);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slidesList = _t);\n    } }, viewQuery: function MatCarouselComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carouselContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carouselList = _t.first);\n    } }, hostBindings: function MatCarouselComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        i0.ɵɵlistener(\"keyup\", function MatCarouselComponent_keyup_HostBindingHandler($event) { return ctx.onKeyUp($event); })(\"mouseenter\", function MatCarouselComponent_mouseenter_HostBindingHandler() { return ctx.onMouseEnter(); })(\"mouseleave\", function MatCarouselComponent_mouseleave_HostBindingHandler() { return ctx.onMouseLeave(); })(\"mousewheel\", function MatCarouselComponent_mousewheel_HostBindingHandler($event) { return ctx.onMouseWheel($event); })(\"resize\", function MatCarouselComponent_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, i0.ɵɵresolveWindow);\n    } }, inputs: { timings: \"timings\", lazyLoad: \"lazyLoad\", svgIconOverrides: \"svgIconOverrides\", autoplay: \"autoplay\", interval: \"interval\", loop: \"loop\", hideArrows: \"hideArrows\", hideIndicators: \"hideIndicators\", ariaLabel: \"ariaLabel\", color: \"color\", maxWidth: \"maxWidth\", maintainAspectRatio: \"maintainAspectRatio\", proportion: \"proportion\", slideHeight: \"slideHeight\", slides: \"slides\", useKeyboard: \"useKeyboard\", useMouseWheel: \"useMouseWheel\", orientation: \"orientation\" }, outputs: { changeEmitter: \"changeEmitter\" }, decls: 8, vars: 13, consts: [[\"tabindex\", \"0\", 1, \"carousel\"], [\"carouselContainer\", \"\"], [\"role\", \"listbox\", 1, \"carousel-list\"], [\"carouselList\", \"\"], [\"class\", \"carousel-slide\", \"role\", \"option\", 3, \"padding-bottom\", \"height\", \"panleft\", \"panright\", \"panend\", \"pancancel\", 4, \"ngFor\", \"ngForOf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Previous slide\", 3, \"color\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Next slide\", 3, \"color\", \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"carousel-indicators\", \"tabindex\", \"-1\", 3, \"flex-direction\", 4, \"ngIf\"], [\"role\", \"option\", 1, \"carousel-slide\", 3, \"panleft\", \"panright\", \"panend\", \"pancancel\"], [\"carouselSlide\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Previous slide\", 3, \"color\", \"disabled\", \"click\"], [3, \"svgIcon\", 4, \"ngIf\", \"ngIfElse\"], [\"defaultArrowBack\", \"\"], [3, \"svgIcon\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Next slide\", 3, \"color\", \"disabled\", \"click\"], [\"defaultArrowForward\", \"\"], [\"tabindex\", \"-1\", 1, \"carousel-indicators\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"mat-mini-fab\", \"\", 3, \"color\", \"disabled\", \"click\", \"focus\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"mat-mini-fab\", \"\", 3, \"color\", \"disabled\", \"click\", \"focus\"]], template: function MatCarouselComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"ul\", 2, 3);\n        i0.ɵɵtemplate(4, MatCarouselComponent_li_4_Template, 3, 5, \"li\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, MatCarouselComponent_button_5_Template, 4, 4, \"button\", 5);\n        i0.ɵɵtemplate(6, MatCarouselComponent_button_6_Template, 4, 4, \"button\", 6);\n        i0.ɵɵtemplate(7, MatCarouselComponent_div_7_Template, 2, 3, \"div\", 7);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵstyleProp(\"max-width\", ctx.maxWidth)(\"height\", !ctx.maintainAspectRatio ? \"100%\" : \"auto\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"flex-direction\", ctx.orientation === \"rtl\" ? \"row-reverse\" : \"row\")(\"height\", !ctx.maintainAspectRatio ? \"100%\" : \"auto\");\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.slidesList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hideArrows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hideArrows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hideIndicators);\n    } }, dependencies: [i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i3.MatIconButton, i3.MatMiniFabButton, i4.MatIcon], styles: [\".carousel[_ngcontent-%COMP%]{width:100%;position:relative;overflow:hidden;outline:none}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{position:absolute;z-index:1;top:50%;transform:translateY(-50%)}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:first-of-type{left:30px}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:last-of-type{right:30px}.carousel-list[_ngcontent-%COMP%]{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide[_ngcontent-%COMP%]{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide[_ngcontent-%COMP%]:hover{cursor:grab}.carousel-indicators[_ngcontent-%COMP%]{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;transform:translate(-50%);outline:none}.carousel-indicators[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{width:10px;height:10px;margin:7.5px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselComponent, [{\n        type: Component,\n        args: [{ selector: 'mat-carousel', template: \"<div\\n  #carouselContainer\\n  class=\\\"carousel\\\"\\n  tabindex=\\\"0\\\"\\n  [style.max-width]=\\\"maxWidth\\\"\\n  [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n>\\n  <ul\\n    #carouselList\\n    class=\\\"carousel-list\\\"\\n    role=\\\"listbox\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n    [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n  >\\n    <li\\n      #carouselSlide\\n      *ngFor=\\\"let slide of slidesList\\\"\\n      class=\\\"carousel-slide\\\"\\n      role=\\\"option\\\"\\n      [style.padding-bottom]=\\\"maintainAspectRatio && proportion ? proportion + '%': '0px'\\\"\\n      [style.height]=\\\"!maintainAspectRatio && slideHeight ? slideHeight : '0px'\\\"\\n      (panleft)=\\\"onPan($event, carouselSlide)\\\"\\n      (panright)=\\\"onPan($event, carouselSlide)\\\"\\n      (panend)=\\\"onPanEnd($event, carouselSlide)\\\"\\n      (pancancel)=\\\"onPanEnd($event, carouselSlide)\\\"\\n    >\\n      <ng-container *ngIf=\\\"slide.load\\\" [ngTemplateOutlet]=\\\"slide.templateRef\\\"></ng-container>\\n    </li>\\n  </ul>\\n\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Previous slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == 0\\\"\\n    (click)=\\\"previous()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowBack; else: defaultArrowBack\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowBack\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowBack>\\n      <mat-icon>arrow_back</mat-icon>\\n    </ng-template>\\n  </button>\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Next slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == slidesList.length - 1\\\"\\n    (click)=\\\"next()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowForward; else: defaultArrowForward\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowForward\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowForward>\\n      <mat-icon>arrow_forward</mat-icon>\\n    </ng-template>\\n  </button>\\n\\n  <div\\n    *ngIf=\\\"!hideIndicators\\\"\\n    class=\\\"carousel-indicators\\\"\\n    tabindex=\\\"-1\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n  >\\n    <button\\n      *ngFor=\\\"let slide of slidesList; let i = index\\\"\\n      type=\\\"button\\\"\\n      tabindex=\\\"-1\\\"\\n      mat-mini-fab\\n      [color]=\\\"color\\\"\\n      [attr.aria-label]=\\\"'Slide #' + i\\\"\\n      [disabled]=\\\"i == currentIndex\\\"\\n      (click)=\\\"slideTo(i)\\\"\\n      (focus)=\\\"carouselContainer.focus()\\\"\\n    ></button>\\n  </div>\\n</div>\\n\", styles: [\".carousel{width:100%;position:relative;overflow:hidden;outline:none}.carousel>button{position:absolute;z-index:1;top:50%;transform:translateY(-50%)}.carousel>button:first-of-type{left:30px}.carousel>button:last-of-type{right:30px}.carousel-list{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide:hover{cursor:grab}.carousel-indicators{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;transform:translate(-50%);outline:none}.carousel-indicators>button{width:10px;height:10px;margin:7.5px}\\n\"] }]\n    }], function () { return [{ type: i1$1.AnimationBuilder }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { timings: [{\n            type: Input\n        }], lazyLoad: [{\n            type: Input\n        }], svgIconOverrides: [{\n            type: Input\n        }], autoplay: [{\n            type: Input\n        }], interval: [{\n            type: Input\n        }], loop: [{\n            type: Input\n        }], hideArrows: [{\n            type: Input\n        }], hideIndicators: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], maxWidth: [{\n            type: Input\n        }], maintainAspectRatio: [{\n            type: Input\n        }], proportion: [{\n            type: Input\n        }], slideHeight: [{\n            type: Input\n        }], slides: [{\n            type: Input\n        }], useKeyboard: [{\n            type: Input\n        }], useMouseWheel: [{\n            type: Input\n        }], orientation: [{\n            type: Input\n        }], changeEmitter: [{\n            type: Output\n        }], slidesList: [{\n            type: ContentChildren,\n            args: [MatCarouselSlideComponent]\n        }], carouselContainer: [{\n            type: ViewChild,\n            args: ['carouselContainer']\n        }], carouselList: [{\n            type: ViewChild,\n            args: ['carouselList']\n        }], onKeyUp: [{\n            type: HostListener,\n            args: ['keyup', ['$event']]\n        }], onMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }], onMouseLeave: [{\n            type: HostListener,\n            args: ['mouseleave']\n        }], onMouseWheel: [{\n            type: HostListener,\n            args: ['mousewheel', ['$event']]\n        }], onResize: [{\n            type: HostListener,\n            args: ['window:resize', ['$event']]\n        }] }); })();","originalLength":65280,"removedExports":[],"renderedExports":["MatCarouselComponent"],"renderedLength":27565},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.module.mjs":{"code":"class MatCarouselHammerConfig extends HammerGestureConfig {\n    constructor() {\n        super(...arguments);\n        this.overrides = {\n            pinch: { enable: false },\n            rotate: { enable: false }\n        };\n    }\n}\n/** @nocollapse */ MatCarouselHammerConfig.ɵfac = /** @pureOrBreakMyCode */ function () { let ɵMatCarouselHammerConfig_BaseFactory; return function MatCarouselHammerConfig_Factory(t) { return (ɵMatCarouselHammerConfig_BaseFactory || (ɵMatCarouselHammerConfig_BaseFactory = i0.ɵɵgetInheritedFactory(MatCarouselHammerConfig)))(t || MatCarouselHammerConfig); }; }();\n/** @nocollapse */ MatCarouselHammerConfig.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: MatCarouselHammerConfig, factory: MatCarouselHammerConfig.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselHammerConfig, [{\n        type: Injectable\n    }], null, null); })();\nclass MatCarouselModule {\n    static forRoot() {\n        return {\n            ngModule: MatCarouselModule,\n            providers: [\n                { provide: HAMMER_GESTURE_CONFIG, useClass: MatCarouselHammerConfig }\n            ]\n        };\n    }\n}\n/** @nocollapse */ MatCarouselModule.ɵfac = function MatCarouselModule_Factory(t) { return new (t || MatCarouselModule)(); };\n/** @nocollapse */ MatCarouselModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: MatCarouselModule });\n/** @nocollapse */ MatCarouselModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatCarouselComponent, MatCarouselSlideComponent],\n                imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule],\n                exports: [MatCarouselComponent, MatCarouselSlideComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(MatCarouselModule, { declarations: [MatCarouselComponent, MatCarouselSlideComponent], imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule], exports: [MatCarouselComponent, MatCarouselSlideComponent] }); })();","originalLength":6194,"removedExports":[],"renderedExports":["MatCarouselHammerConfig","MatCarouselModule"],"renderedLength":2348},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.mjs":{"code":"","originalLength":1189,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel-slide/carousel-slide.mjs":{"code":"","originalLength":625,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/public_api.mjs":{"code":"/*\n * Public API Surface of mat-carousel\n */","originalLength":1084,"removedExports":[],"renderedExports":[],"renderedLength":44},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/ng-mat-carousel.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":504,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i1$1 from '@angular/animations';\nimport { animate, style } from '@angular/animations';\nimport { ListKeyManager } from '@angular/cdk/a11y';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { TemplateRef, Component, Input, ViewChild, EventEmitter, PLATFORM_ID, Inject, Output, ContentChildren, HostListener, Injectable, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, interval } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG, HammerModule } from '@angular/platform-browser';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i4 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\n\nfunction MatCarouselSlideComponent_ng_template_0_div_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 3);\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r1.overlayColor);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel);\n} }\nfunction MatCarouselSlideComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MatCarouselSlideComponent_ng_template_0_div_3_Template, 1, 3, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"background-image\", ctx_r0.image);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.hideOverlay);\n} }\nconst _c0$1 = [\"*\"];\nclass MatCarouselSlideComponent {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n        this.overlayColor = '#00000040';\n        this.hideOverlay = false;\n        this.ariaLabel = '';\n        this.disabled = false; // implements ListKeyManagerOption\n        this.load = false;\n    }\n    ngOnInit() {\n        if (this.image) {\n            this.image = this.sanitizer.bypassSecurityTrustStyle(`url(\"${this.image}\")`);\n        }\n    }\n}\n/** @nocollapse */ MatCarouselSlideComponent.ɵfac = function MatCarouselSlideComponent_Factory(t) { return new (t || MatCarouselSlideComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer)); };\n/** @nocollapse */ MatCarouselSlideComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MatCarouselSlideComponent, selectors: [[\"mat-carousel-slide\"]], viewQuery: function MatCarouselSlideComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { image: \"image\", overlayColor: \"overlayColor\", hideOverlay: \"hideOverlay\", ariaLabel: \"ariaLabel\", disabled: \"disabled\", load: \"load\" }, ngContentSelectors: _c0$1, decls: 1, vars: 0, consts: [[1, \"carousel-slide\"], [1, \"carousel-slide-content\"], [\"class\", \"carousel-slide-overlay\", 3, \"background-color\", 4, \"ngIf\"], [1, \"carousel-slide-overlay\"]], template: function MatCarouselSlideComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatCarouselSlideComponent_ng_template_0_Template, 4, 3, \"ng-template\");\n    } }, dependencies: [i2.NgIf], styles: [\".carousel-slide[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:1}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselSlideComponent, [{\n        type: Component,\n        args: [{ selector: 'mat-carousel-slide', template: \"<ng-template>\\n  <div class=\\\"carousel-slide\\\" [style.background-image]=\\\"image\\\">\\n    <div class=\\\"carousel-slide-content\\\"><ng-content></ng-content></div>\\n    <div\\n      *ngIf=\\\"!hideOverlay\\\"\\n      class=\\\"carousel-slide-overlay\\\"\\n      [attr.aria-label] = \\\"ariaLabel\\\"\\n      [style.background-color]=\\\"overlayColor\\\"\\n    ></div>\\n  </div>\\n</ng-template>\\n\", styles: [\".carousel-slide{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content{width:100%;height:100%;position:absolute;z-index:1}\\n\"] }]\n    }], function () { return [{ type: i1.DomSanitizer }]; }, { image: [{\n            type: Input\n        }], overlayColor: [{\n            type: Input\n        }], hideOverlay: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], load: [{\n            type: Input\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }] }); })();\n\nconst _c0 = [\"carouselContainer\"];\nconst _c1 = [\"carouselList\"];\nfunction MatCarouselComponent_li_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainer(0, 11);\n} if (rf & 2) {\n    const slide_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngTemplateOutlet\", slide_r6.templateRef);\n} }\nfunction MatCarouselComponent_li_4_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 8, 9);\n    i0.ɵɵlistener(\"panleft\", function MatCarouselComponent_li_4_Template_li_panleft_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.onPan($event, _r7)); })(\"panright\", function MatCarouselComponent_li_4_Template_li_panright_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r12 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r12.onPan($event, _r7)); })(\"panend\", function MatCarouselComponent_li_4_Template_li_panend_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.onPanEnd($event, _r7)); })(\"pancancel\", function MatCarouselComponent_li_4_Template_li_pancancel_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r14 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r14.onPanEnd($event, _r7)); });\n    i0.ɵɵtemplate(2, MatCarouselComponent_li_4_ng_container_2_Template, 1, 1, \"ng-container\", 10);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const slide_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"padding-bottom\", ctx_r2.maintainAspectRatio && ctx_r2.proportion ? ctx_r2.proportion + \"%\" : \"0px\")(\"height\", !ctx_r2.maintainAspectRatio && ctx_r2.slideHeight ? ctx_r2.slideHeight : \"0px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", slide_r6.load);\n} }\nfunction MatCarouselComponent_button_5_mat_icon_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 15);\n} if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r15.svgIconOverrides.arrowBack);\n} }\nfunction MatCarouselComponent_button_5_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"arrow_back\");\n    i0.ɵɵelementEnd();\n} }\nfunction MatCarouselComponent_button_5_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function MatCarouselComponent_button_5_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r18.previous()); });\n    i0.ɵɵtemplate(1, MatCarouselComponent_button_5_mat_icon_1_Template, 1, 1, \"mat-icon\", 13);\n    i0.ɵɵtemplate(2, MatCarouselComponent_button_5_ng_template_2_Template, 2, 0, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r16 = i0.ɵɵreference(3);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r3.color)(\"disabled\", !ctx_r3.loop && ctx_r3.currentIndex == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.svgIconOverrides == null ? null : ctx_r3.svgIconOverrides.arrowBack)(\"ngIfElse\", _r16);\n} }\nfunction MatCarouselComponent_button_6_mat_icon_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 15);\n} if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r20.svgIconOverrides.arrowForward);\n} }\nfunction MatCarouselComponent_button_6_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"arrow_forward\");\n    i0.ɵɵelementEnd();\n} }\nfunction MatCarouselComponent_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function MatCarouselComponent_button_6_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r24); const ctx_r23 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r23.next()); });\n    i0.ɵɵtemplate(1, MatCarouselComponent_button_6_mat_icon_1_Template, 1, 1, \"mat-icon\", 13);\n    i0.ɵɵtemplate(2, MatCarouselComponent_button_6_ng_template_2_Template, 2, 0, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r21 = i0.ɵɵreference(3);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r4.color)(\"disabled\", !ctx_r4.loop && ctx_r4.currentIndex == ctx_r4.slidesList.length - 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.svgIconOverrides == null ? null : ctx_r4.svgIconOverrides.arrowForward)(\"ngIfElse\", _r21);\n} }\nfunction MatCarouselComponent_div_7_button_1_Template(rf, ctx) { if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function MatCarouselComponent_div_7_button_1_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const i_r27 = restoredCtx.index; const ctx_r28 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r28.slideTo(i_r27)); })(\"focus\", function MatCarouselComponent_div_7_button_1_Template_button_focus_0_listener() { i0.ɵɵrestoreView(_r29); i0.ɵɵnextContext(2); const _r0 = i0.ɵɵreference(1); return i0.ɵɵresetView(_r0.focus()); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const i_r27 = ctx.index;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"color\", ctx_r25.color)(\"disabled\", i_r27 == ctx_r25.currentIndex);\n    i0.ɵɵattribute(\"aria-label\", \"Slide #\" + i_r27);\n} }\nfunction MatCarouselComponent_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, MatCarouselComponent_div_7_button_1_Template, 1, 3, \"button\", 19);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"flex-direction\", ctx_r5.orientation === \"rtl\" ? \"row-reverse\" : \"row\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.slidesList);\n} }\nvar Direction;\n(function (Direction) {\n    Direction[Direction[\"left\"] = 0] = \"left\";\n    Direction[Direction[\"right\"] = 1] = \"right\";\n    Direction[Direction[\"index\"] = 2] = \"index\";\n})(Direction || (Direction = {}));\nclass MatCarouselComponent {\n    set autoplay(value) {\n        this.autoplay$.next(value);\n        this._autoplay = value;\n    }\n    set interval(value) {\n        this.interval$.next(value);\n    }\n    get loop() {\n        return this._loop;\n    }\n    set loop(value) {\n        this.loop$.next(value);\n        this._loop = value;\n    }\n    get maxWidth() {\n        return this._maxWidth;\n    }\n    set maxWidth(value) {\n        this._maxWidth = value;\n        this.maxWidth$.next();\n    }\n    set slides(value) {\n        this.slides$.next(value);\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this.orientation$.next(value);\n        this._orientation = value;\n    }\n    get currentIndex() {\n        if (this.listKeyManager) {\n            return this.listKeyManager.activeItemIndex;\n        }\n        return 0;\n    }\n    get currentSlide() {\n        if (this.listKeyManager) {\n            return this.listKeyManager.activeItem;\n        }\n        return null;\n    }\n    constructor(animationBuilder, renderer, platformId) {\n        this.animationBuilder = animationBuilder;\n        this.renderer = renderer;\n        this.platformId = platformId;\n        this.timings = '250ms ease-in';\n        this.lazyLoad = false;\n        this.hideArrows = true;\n        this.hideIndicators = true;\n        this.ariaLabel = 'Sliding carousel';\n        this.color = 'accent';\n        this.maintainAspectRatio = true;\n        this.proportion = 25;\n        this.slideHeight = '100%';\n        this.useKeyboard = false;\n        this.useMouseWheel = false;\n        this.changeEmitter = new EventEmitter();\n        this._autoplay = true;\n        this.autoplay$ = new Subject();\n        this.interval$ = new BehaviorSubject(5000);\n        this.slides$ = new BehaviorSubject(null);\n        this._maxWidth = 'auto';\n        this.maxWidth$ = new Subject();\n        this._loop = true;\n        this.loop$ = new Subject();\n        this._orientation = 'ltr';\n        this.orientation$ = new Subject();\n        this.timerStop$ = new Subject();\n        this.destroy$ = new Subject();\n        this.playing = false;\n    }\n    onKeyUp(event) {\n        if (this.useKeyboard && !this.playing) {\n            this.listKeyManager.onKeydown(event);\n        }\n    }\n    onMouseEnter() {\n        this.stopTimer();\n    }\n    onMouseLeave() {\n        this.startTimer(this._autoplay);\n    }\n    onMouseWheel(event) {\n        if (this.useMouseWheel) {\n            event.preventDefault(); // prevent window to scroll\n            const deltaY = Math.sign(event.deltaY);\n            if (deltaY > 0) {\n                this.next();\n            }\n            else if (deltaY < 0) {\n                this.previous();\n            }\n        }\n    }\n    onResize(event) {\n        // Reset carousel when width is resized\n        // in order to avoid major glitches.\n        const w = this.getWidth();\n        if (w !== this.width) {\n            this.width = w;\n            this.slideTo(0);\n        }\n    }\n    ngAfterContentInit() {\n        if (!this.lazyLoad) {\n            this.slidesList.forEach((slide) => slide.load = true);\n        }\n        else {\n            this.slidesList.first.load = true;\n            setTimeout(() => {\n                this.slidesList.find((s, i) => i === 1 % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === (this.slidesList.length - 1) % this.slidesList.length).load = true;\n            }, this.interval$.getValue() / 2);\n        }\n        this.listKeyManager = new ListKeyManager(this.slidesList)\n            .withVerticalOrientation(false)\n            .withHorizontalOrientation(this._orientation)\n            .withWrap(this._loop);\n        this.listKeyManager.updateActiveItem(0);\n        this.listKeyManager.change\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.playAnimation());\n    }\n    ngAfterViewInit() {\n        this.width = this.getWidth();\n        this.autoplay$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n            this.stopTimer();\n            this.startTimer(value);\n        });\n        this.interval$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n            this.stopTimer();\n            this.resetTimer(value);\n            this.startTimer(this._autoplay);\n        });\n        this.maxWidth$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.slideTo(0));\n        this.loop$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => this.listKeyManager.withWrap(value));\n        this.orientation$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => this.listKeyManager.withHorizontalOrientation(value));\n        this.slides$\n            .pipe(takeUntil(this.destroy$), filter(value => value && value < this.slidesList.length))\n            .subscribe(value => this.resetSlides(value));\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    next() {\n        this.goto(Direction.right);\n    }\n    previous() {\n        this.goto(Direction.left);\n    }\n    slideTo(index) {\n        this.goto(Direction.index, index);\n    }\n    onPan(event, slideElem) {\n        // https://github.com/angular/angular/issues/10541#issuecomment-346539242\n        // if y velocity is greater, it's a panup/pandown, so ignore.\n        if (Math.abs(event.velocityY) > Math.abs(event.velocityX)) {\n            return;\n        }\n        let deltaX = event.deltaX;\n        if (this.isOutOfBounds()) {\n            deltaX *= 0.2; // decelerate movement;\n        }\n        this.renderer.setStyle(slideElem, 'cursor', 'grabbing');\n        this.renderer.setStyle(this.carouselList.nativeElement, 'transform', this.getTranslation(this.getOffset() + deltaX));\n    }\n    onPanEnd(event, slideElem) {\n        this.renderer.removeStyle(slideElem, 'cursor');\n        if (!this.isOutOfBounds() &&\n            Math.abs(event.deltaX) > this.getWidth() * 0.25) {\n            if (event.deltaX <= 0) {\n                this.next();\n                return;\n            }\n            this.previous();\n            return;\n        }\n        this.playAnimation(); // slide back, don't change current index\n    }\n    isOutOfBounds() {\n        const sign = this.orientation === 'rtl' ? -1 : 1;\n        const left = sign *\n            (this.carouselList.nativeElement.getBoundingClientRect().left -\n                this.carouselList.nativeElement.offsetParent.getBoundingClientRect()\n                    .left);\n        const lastIndex = this.slidesList.length - 1;\n        const width = -this.getWidth() * lastIndex;\n        return ((this.listKeyManager.activeItemIndex === 0 && left >= 0) ||\n            (this.listKeyManager.activeItemIndex === lastIndex && left <= width));\n    }\n    isVisible() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return false;\n        }\n        const elem = this.carouselContainer.nativeElement;\n        const docViewTop = window.pageYOffset;\n        const docViewBottom = docViewTop + window.innerHeight;\n        const elemOffset = elem.getBoundingClientRect();\n        const elemTop = docViewTop + elemOffset.top;\n        const elemBottom = elemTop + elemOffset.height;\n        return elemBottom <= docViewBottom || elemTop >= docViewTop;\n    }\n    getOffset() {\n        const offset = this.listKeyManager.activeItemIndex * this.getWidth();\n        const sign = this.orientation === 'rtl' ? 1 : -1;\n        return sign * offset;\n    }\n    getTranslation(offset) {\n        return `translateX(${offset}px)`;\n    }\n    getWidth() {\n        return this.carouselContainer.nativeElement.clientWidth;\n    }\n    goto(direction, index) {\n        if (!this.playing) {\n            const rtl = this.orientation === 'rtl';\n            switch (direction) {\n                case Direction.left:\n                    return rtl\n                        ? this.listKeyManager.setNextItemActive()\n                        : this.listKeyManager.setPreviousItemActive();\n                case Direction.right:\n                    return rtl\n                        ? this.listKeyManager.setPreviousItemActive()\n                        : this.listKeyManager.setNextItemActive();\n                case Direction.index:\n                    return this.listKeyManager.setActiveItem(index);\n            }\n        }\n    }\n    playAnimation() {\n        const translation = this.getTranslation(this.getOffset());\n        const factory = this.animationBuilder.build(animate(this.timings, style({ transform: translation })));\n        const animation = factory.create(this.carouselList.nativeElement);\n        animation.onStart(() => {\n            this.playing = true;\n        });\n        animation.onDone(() => {\n            this.changeEmitter.emit(this.currentIndex);\n            this.playing = false;\n            if (this.lazyLoad) {\n                this.slidesList.find((s, i) => i === (this.currentIndex + 1) % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === (this.currentIndex - 1 + this.slidesList.length) % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === this.currentIndex).load = true;\n            }\n            this.renderer.setStyle(this.carouselList.nativeElement, 'transform', translation);\n            animation.destroy();\n        });\n        animation.play();\n    }\n    resetSlides(slides) {\n        this.slidesList.reset(this.slidesList.toArray().slice(0, slides));\n    }\n    resetTimer(value) {\n        this.timer$ = interval(value);\n    }\n    startTimer(autoplay) {\n        if (!autoplay) {\n            return;\n        }\n        this.timer$\n            .pipe(takeUntil(this.timerStop$), takeUntil(this.destroy$), filter(() => this.isVisible()))\n            .subscribe(() => {\n            this.listKeyManager.withWrap(true).setNextItemActive();\n            this.listKeyManager.withWrap(this.loop);\n        });\n    }\n    stopTimer() {\n        this.timerStop$.next();\n    }\n}\n/** @nocollapse */ MatCarouselComponent.ɵfac = function MatCarouselComponent_Factory(t) { return new (t || MatCarouselComponent)(i0.ɵɵdirectiveInject(i1$1.AnimationBuilder), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID)); };\n/** @nocollapse */ MatCarouselComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MatCarouselComponent, selectors: [[\"mat-carousel\"]], contentQueries: function MatCarouselComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatCarouselSlideComponent, 4);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slidesList = _t);\n    } }, viewQuery: function MatCarouselComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carouselContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carouselList = _t.first);\n    } }, hostBindings: function MatCarouselComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        i0.ɵɵlistener(\"keyup\", function MatCarouselComponent_keyup_HostBindingHandler($event) { return ctx.onKeyUp($event); })(\"mouseenter\", function MatCarouselComponent_mouseenter_HostBindingHandler() { return ctx.onMouseEnter(); })(\"mouseleave\", function MatCarouselComponent_mouseleave_HostBindingHandler() { return ctx.onMouseLeave(); })(\"mousewheel\", function MatCarouselComponent_mousewheel_HostBindingHandler($event) { return ctx.onMouseWheel($event); })(\"resize\", function MatCarouselComponent_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, i0.ɵɵresolveWindow);\n    } }, inputs: { timings: \"timings\", lazyLoad: \"lazyLoad\", svgIconOverrides: \"svgIconOverrides\", autoplay: \"autoplay\", interval: \"interval\", loop: \"loop\", hideArrows: \"hideArrows\", hideIndicators: \"hideIndicators\", ariaLabel: \"ariaLabel\", color: \"color\", maxWidth: \"maxWidth\", maintainAspectRatio: \"maintainAspectRatio\", proportion: \"proportion\", slideHeight: \"slideHeight\", slides: \"slides\", useKeyboard: \"useKeyboard\", useMouseWheel: \"useMouseWheel\", orientation: \"orientation\" }, outputs: { changeEmitter: \"changeEmitter\" }, decls: 8, vars: 13, consts: [[\"tabindex\", \"0\", 1, \"carousel\"], [\"carouselContainer\", \"\"], [\"role\", \"listbox\", 1, \"carousel-list\"], [\"carouselList\", \"\"], [\"class\", \"carousel-slide\", \"role\", \"option\", 3, \"padding-bottom\", \"height\", \"panleft\", \"panright\", \"panend\", \"pancancel\", 4, \"ngFor\", \"ngForOf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Previous slide\", 3, \"color\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Next slide\", 3, \"color\", \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"carousel-indicators\", \"tabindex\", \"-1\", 3, \"flex-direction\", 4, \"ngIf\"], [\"role\", \"option\", 1, \"carousel-slide\", 3, \"panleft\", \"panright\", \"panend\", \"pancancel\"], [\"carouselSlide\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Previous slide\", 3, \"color\", \"disabled\", \"click\"], [3, \"svgIcon\", 4, \"ngIf\", \"ngIfElse\"], [\"defaultArrowBack\", \"\"], [3, \"svgIcon\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Next slide\", 3, \"color\", \"disabled\", \"click\"], [\"defaultArrowForward\", \"\"], [\"tabindex\", \"-1\", 1, \"carousel-indicators\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"mat-mini-fab\", \"\", 3, \"color\", \"disabled\", \"click\", \"focus\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"mat-mini-fab\", \"\", 3, \"color\", \"disabled\", \"click\", \"focus\"]], template: function MatCarouselComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"ul\", 2, 3);\n        i0.ɵɵtemplate(4, MatCarouselComponent_li_4_Template, 3, 5, \"li\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, MatCarouselComponent_button_5_Template, 4, 4, \"button\", 5);\n        i0.ɵɵtemplate(6, MatCarouselComponent_button_6_Template, 4, 4, \"button\", 6);\n        i0.ɵɵtemplate(7, MatCarouselComponent_div_7_Template, 2, 3, \"div\", 7);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵstyleProp(\"max-width\", ctx.maxWidth)(\"height\", !ctx.maintainAspectRatio ? \"100%\" : \"auto\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"flex-direction\", ctx.orientation === \"rtl\" ? \"row-reverse\" : \"row\")(\"height\", !ctx.maintainAspectRatio ? \"100%\" : \"auto\");\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.slidesList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hideArrows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hideArrows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hideIndicators);\n    } }, dependencies: [i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i3.MatIconButton, i3.MatMiniFabButton, i4.MatIcon], styles: [\".carousel[_ngcontent-%COMP%]{width:100%;position:relative;overflow:hidden;outline:none}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{position:absolute;z-index:1;top:50%;transform:translateY(-50%)}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:first-of-type{left:30px}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:last-of-type{right:30px}.carousel-list[_ngcontent-%COMP%]{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide[_ngcontent-%COMP%]{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide[_ngcontent-%COMP%]:hover{cursor:grab}.carousel-indicators[_ngcontent-%COMP%]{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;transform:translate(-50%);outline:none}.carousel-indicators[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{width:10px;height:10px;margin:7.5px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselComponent, [{\n        type: Component,\n        args: [{ selector: 'mat-carousel', template: \"<div\\n  #carouselContainer\\n  class=\\\"carousel\\\"\\n  tabindex=\\\"0\\\"\\n  [style.max-width]=\\\"maxWidth\\\"\\n  [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n>\\n  <ul\\n    #carouselList\\n    class=\\\"carousel-list\\\"\\n    role=\\\"listbox\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n    [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n  >\\n    <li\\n      #carouselSlide\\n      *ngFor=\\\"let slide of slidesList\\\"\\n      class=\\\"carousel-slide\\\"\\n      role=\\\"option\\\"\\n      [style.padding-bottom]=\\\"maintainAspectRatio && proportion ? proportion + '%': '0px'\\\"\\n      [style.height]=\\\"!maintainAspectRatio && slideHeight ? slideHeight : '0px'\\\"\\n      (panleft)=\\\"onPan($event, carouselSlide)\\\"\\n      (panright)=\\\"onPan($event, carouselSlide)\\\"\\n      (panend)=\\\"onPanEnd($event, carouselSlide)\\\"\\n      (pancancel)=\\\"onPanEnd($event, carouselSlide)\\\"\\n    >\\n      <ng-container *ngIf=\\\"slide.load\\\" [ngTemplateOutlet]=\\\"slide.templateRef\\\"></ng-container>\\n    </li>\\n  </ul>\\n\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Previous slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == 0\\\"\\n    (click)=\\\"previous()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowBack; else: defaultArrowBack\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowBack\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowBack>\\n      <mat-icon>arrow_back</mat-icon>\\n    </ng-template>\\n  </button>\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Next slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == slidesList.length - 1\\\"\\n    (click)=\\\"next()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowForward; else: defaultArrowForward\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowForward\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowForward>\\n      <mat-icon>arrow_forward</mat-icon>\\n    </ng-template>\\n  </button>\\n\\n  <div\\n    *ngIf=\\\"!hideIndicators\\\"\\n    class=\\\"carousel-indicators\\\"\\n    tabindex=\\\"-1\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n  >\\n    <button\\n      *ngFor=\\\"let slide of slidesList; let i = index\\\"\\n      type=\\\"button\\\"\\n      tabindex=\\\"-1\\\"\\n      mat-mini-fab\\n      [color]=\\\"color\\\"\\n      [attr.aria-label]=\\\"'Slide #' + i\\\"\\n      [disabled]=\\\"i == currentIndex\\\"\\n      (click)=\\\"slideTo(i)\\\"\\n      (focus)=\\\"carouselContainer.focus()\\\"\\n    ></button>\\n  </div>\\n</div>\\n\", styles: [\".carousel{width:100%;position:relative;overflow:hidden;outline:none}.carousel>button{position:absolute;z-index:1;top:50%;transform:translateY(-50%)}.carousel>button:first-of-type{left:30px}.carousel>button:last-of-type{right:30px}.carousel-list{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide:hover{cursor:grab}.carousel-indicators{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;transform:translate(-50%);outline:none}.carousel-indicators>button{width:10px;height:10px;margin:7.5px}\\n\"] }]\n    }], function () { return [{ type: i1$1.AnimationBuilder }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { timings: [{\n            type: Input\n        }], lazyLoad: [{\n            type: Input\n        }], svgIconOverrides: [{\n            type: Input\n        }], autoplay: [{\n            type: Input\n        }], interval: [{\n            type: Input\n        }], loop: [{\n            type: Input\n        }], hideArrows: [{\n            type: Input\n        }], hideIndicators: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], maxWidth: [{\n            type: Input\n        }], maintainAspectRatio: [{\n            type: Input\n        }], proportion: [{\n            type: Input\n        }], slideHeight: [{\n            type: Input\n        }], slides: [{\n            type: Input\n        }], useKeyboard: [{\n            type: Input\n        }], useMouseWheel: [{\n            type: Input\n        }], orientation: [{\n            type: Input\n        }], changeEmitter: [{\n            type: Output\n        }], slidesList: [{\n            type: ContentChildren,\n            args: [MatCarouselSlideComponent]\n        }], carouselContainer: [{\n            type: ViewChild,\n            args: ['carouselContainer']\n        }], carouselList: [{\n            type: ViewChild,\n            args: ['carouselList']\n        }], onKeyUp: [{\n            type: HostListener,\n            args: ['keyup', ['$event']]\n        }], onMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }], onMouseLeave: [{\n            type: HostListener,\n            args: ['mouseleave']\n        }], onMouseWheel: [{\n            type: HostListener,\n            args: ['mousewheel', ['$event']]\n        }], onResize: [{\n            type: HostListener,\n            args: ['window:resize', ['$event']]\n        }] }); })();\n\nclass MatCarouselHammerConfig extends HammerGestureConfig {\n    constructor() {\n        super(...arguments);\n        this.overrides = {\n            pinch: { enable: false },\n            rotate: { enable: false }\n        };\n    }\n}\n/** @nocollapse */ MatCarouselHammerConfig.ɵfac = /** @pureOrBreakMyCode */ function () { let ɵMatCarouselHammerConfig_BaseFactory; return function MatCarouselHammerConfig_Factory(t) { return (ɵMatCarouselHammerConfig_BaseFactory || (ɵMatCarouselHammerConfig_BaseFactory = i0.ɵɵgetInheritedFactory(MatCarouselHammerConfig)))(t || MatCarouselHammerConfig); }; }();\n/** @nocollapse */ MatCarouselHammerConfig.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: MatCarouselHammerConfig, factory: MatCarouselHammerConfig.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselHammerConfig, [{\n        type: Injectable\n    }], null, null); })();\nclass MatCarouselModule {\n    static forRoot() {\n        return {\n            ngModule: MatCarouselModule,\n            providers: [\n                { provide: HAMMER_GESTURE_CONFIG, useClass: MatCarouselHammerConfig }\n            ]\n        };\n    }\n}\n/** @nocollapse */ MatCarouselModule.ɵfac = function MatCarouselModule_Factory(t) { return new (t || MatCarouselModule)(); };\n/** @nocollapse */ MatCarouselModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: MatCarouselModule });\n/** @nocollapse */ MatCarouselModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatCarouselComponent, MatCarouselSlideComponent],\n                imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule],\n                exports: [MatCarouselComponent, MatCarouselSlideComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(MatCarouselModule, { declarations: [MatCarouselComponent, MatCarouselSlideComponent], imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule], exports: [MatCarouselComponent, MatCarouselSlideComponent] }); })();\n\n/*\n * Public API Surface of mat-carousel\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCarouselComponent, MatCarouselHammerConfig, MatCarouselModule, MatCarouselSlideComponent };\n//# sourceMappingURL=ng-mat-carousel.mjs.map\n","map":null,"preliminaryFileName":"ng-mat-carousel.mjs","sourcemapFileName":"ng-mat-carousel.mjs.map"},{"fileName":"ng-mat-carousel.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"ng-mat-carousel.mjs\",\"sources\":[\"../../../projects/carousel/src/lib/carousel-slide/carousel-slide.component.html\",\"../../../projects/carousel/src/lib/carousel-slide/carousel-slide.component.ts\",\"../../../projects/carousel/src/lib/carousel.component.html\",\"../../../projects/carousel/src/lib/carousel.component.ts\",\"../../../projects/carousel/src/lib/carousel.module.ts\",\"../../../projects/carousel/src/public_api.ts\",\"../../../projects/carousel/src/ng-mat-carousel.ts\"],\"sourcesContent\":[\"<ng-template>\\n  <div class=\\\"carousel-slide\\\" [style.background-image]=\\\"image\\\">\\n    <div class=\\\"carousel-slide-content\\\"><ng-content></ng-content></div>\\n    <div\\n      *ngIf=\\\"!hideOverlay\\\"\\n      class=\\\"carousel-slide-overlay\\\"\\n      [attr.aria-label] = \\\"ariaLabel\\\"\\n      [style.background-color]=\\\"overlayColor\\\"\\n    ></div>\\n  </div>\\n</ng-template>\\n\",\"import { ListKeyManagerOption } from '@angular/cdk/a11y';\\nimport {\\n  Component,\\n  Input,\\n  OnInit,\\n  TemplateRef,\\n  ViewChild\\n} from '@angular/core';\\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\\n\\nimport { MatCarouselSlide } from './carousel-slide';\\n\\n@Component({\\n  selector: 'mat-carousel-slide',\\n  templateUrl: './carousel-slide.component.html',\\n  styleUrls: ['./carousel-slide.component.scss']\\n})\\nexport class MatCarouselSlideComponent\\n  implements ListKeyManagerOption, MatCarouselSlide, OnInit {\\n  @Input() public image: SafeStyle;\\n  @Input() public overlayColor = '#00000040';\\n  @Input() public hideOverlay = false;\\n  @Input() public ariaLabel = '';\\n  @Input() public disabled = false; // implements ListKeyManagerOption\\n  @Input() public load = false;\\n\\n  @ViewChild(TemplateRef) public templateRef: TemplateRef<any>;\\n\\n  constructor(public sanitizer: DomSanitizer) {\\n  }\\n\\n  public ngOnInit(): void {\\n    if (this.image) {\\n      this.image = this.sanitizer.bypassSecurityTrustStyle(`url(\\\"${this.image}\\\")`);\\n    }\\n  }\\n}\\n\",\"<div\\n  #carouselContainer\\n  class=\\\"carousel\\\"\\n  tabindex=\\\"0\\\"\\n  [style.max-width]=\\\"maxWidth\\\"\\n  [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n>\\n  <ul\\n    #carouselList\\n    class=\\\"carousel-list\\\"\\n    role=\\\"listbox\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n    [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n  >\\n    <li\\n      #carouselSlide\\n      *ngFor=\\\"let slide of slidesList\\\"\\n      class=\\\"carousel-slide\\\"\\n      role=\\\"option\\\"\\n      [style.padding-bottom]=\\\"maintainAspectRatio && proportion ? proportion + '%': '0px'\\\"\\n      [style.height]=\\\"!maintainAspectRatio && slideHeight ? slideHeight : '0px'\\\"\\n      (panleft)=\\\"onPan($event, carouselSlide)\\\"\\n      (panright)=\\\"onPan($event, carouselSlide)\\\"\\n      (panend)=\\\"onPanEnd($event, carouselSlide)\\\"\\n      (pancancel)=\\\"onPanEnd($event, carouselSlide)\\\"\\n    >\\n      <ng-container *ngIf=\\\"slide.load\\\" [ngTemplateOutlet]=\\\"slide.templateRef\\\"></ng-container>\\n    </li>\\n  </ul>\\n\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Previous slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == 0\\\"\\n    (click)=\\\"previous()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowBack; else: defaultArrowBack\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowBack\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowBack>\\n      <mat-icon>arrow_back</mat-icon>\\n    </ng-template>\\n  </button>\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Next slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == slidesList.length - 1\\\"\\n    (click)=\\\"next()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowForward; else: defaultArrowForward\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowForward\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowForward>\\n      <mat-icon>arrow_forward</mat-icon>\\n    </ng-template>\\n  </button>\\n\\n  <div\\n    *ngIf=\\\"!hideIndicators\\\"\\n    class=\\\"carousel-indicators\\\"\\n    tabindex=\\\"-1\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n  >\\n    <button\\n      *ngFor=\\\"let slide of slidesList; let i = index\\\"\\n      type=\\\"button\\\"\\n      tabindex=\\\"-1\\\"\\n      mat-mini-fab\\n      [color]=\\\"color\\\"\\n      [attr.aria-label]=\\\"'Slide #' + i\\\"\\n      [disabled]=\\\"i == currentIndex\\\"\\n      (click)=\\\"slideTo(i)\\\"\\n      (focus)=\\\"carouselContainer.focus()\\\"\\n    ></button>\\n  </div>\\n</div>\\n\",\"import { animate, style, AnimationBuilder } from '@angular/animations';\\nimport { ListKeyManager } from '@angular/cdk/a11y';\\nimport { isPlatformBrowser } from '@angular/common';\\nimport {\\n  AfterContentInit,\\n  AfterViewInit,\\n  Component,\\n  ContentChildren,\\n  ElementRef,\\n  EventEmitter,\\n  HostListener,\\n  Inject,\\n  Input,\\n  OnDestroy,\\n  Output,\\n  PLATFORM_ID,\\n  QueryList,\\n  Renderer2,\\n  ViewChild\\n} from '@angular/core';\\nimport { ThemePalette } from '@angular/material/core';\\nimport { interval, BehaviorSubject, Observable, Subject } from 'rxjs';\\nimport { filter, takeUntil } from 'rxjs/operators';\\n\\nimport { MatCarousel, Orientation, SvgIconOverrides } from './carousel';\\nimport { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';\\n\\nenum Direction {\\n  left,\\n  right,\\n  index\\n}\\n\\n@Component({\\n  selector: 'mat-carousel',\\n  templateUrl: './carousel.component.html',\\n  styleUrls: ['./carousel.component.scss']\\n})\\nexport class MatCarouselComponent\\n  implements AfterContentInit, AfterViewInit, MatCarousel, OnDestroy {\\n  @Input() public timings = '250ms ease-in';\\n  @Input() public lazyLoad = false;\\n  @Input() public svgIconOverrides: SvgIconOverrides;\\n\\n  @Input()\\n  public set autoplay(value: boolean) {\\n    this.autoplay$.next(value);\\n    this._autoplay = value;\\n  }\\n\\n  @Input()\\n  public set interval(value: number) {\\n    this.interval$.next(value);\\n  }\\n\\n  public get loop(): boolean {\\n    return this._loop;\\n  }\\n  @Input()\\n  public set loop(value: boolean) {\\n    this.loop$.next(value);\\n    this._loop = value;\\n  }\\n\\n  @Input() public hideArrows = true;\\n  @Input() public hideIndicators = true;\\n  @Input() public ariaLabel = 'Sliding carousel';\\n  @Input() public color: ThemePalette = 'accent';\\n\\n  public get maxWidth(): string {\\n    return this._maxWidth;\\n  }\\n  @Input()\\n  public set maxWidth(value: string) {\\n    this._maxWidth = value;\\n    this.maxWidth$.next();\\n  }\\n\\n  @Input() public maintainAspectRatio = true;\\n  @Input() public proportion = 25;\\n  @Input() public slideHeight = '100%';\\n\\n  @Input()\\n  public set slides(value: number) {\\n    this.slides$.next(value);\\n  }\\n\\n  @Input() public useKeyboard = false;\\n  @Input() public useMouseWheel = false;\\n\\n  public get orientation(): Orientation {\\n    return this._orientation;\\n  }\\n  @Input()\\n  public set orientation(value: Orientation) {\\n    this.orientation$.next(value);\\n    this._orientation = value;\\n  }\\n\\n  @Output()\\n  public changeEmitter: EventEmitter<number> = new EventEmitter<number>();\\n\\n  public get currentIndex(): number {\\n    if (this.listKeyManager) {\\n      return this.listKeyManager.activeItemIndex;\\n    }\\n\\n    return 0;\\n  }\\n  public get currentSlide(): MatCarouselSlideComponent {\\n    if (this.listKeyManager) {\\n      return this.listKeyManager.activeItem;\\n    }\\n\\n    return null;\\n  }\\n\\n  @ContentChildren(MatCarouselSlideComponent) public slidesList: QueryList<\\n    MatCarouselSlideComponent\\n  >;\\n  @ViewChild('carouselContainer') private carouselContainer: ElementRef<\\n    HTMLDivElement\\n  >;\\n  @ViewChild('carouselList') private carouselList: ElementRef<HTMLElement>;\\n  public listKeyManager: ListKeyManager<MatCarouselSlideComponent>;\\n\\n  private _autoplay = true;\\n  private autoplay$ = new Subject<boolean>();\\n\\n  private interval$ = new BehaviorSubject<number>(5000);\\n  private slides$ = new BehaviorSubject<number>(null);\\n\\n  private _maxWidth = 'auto';\\n  private maxWidth$ = new Subject<never>();\\n\\n  private _loop = true;\\n  private loop$ = new Subject<boolean>();\\n\\n  private _orientation: Orientation = 'ltr';\\n  private orientation$ = new Subject<Orientation>();\\n\\n  private timer$: Observable<number>;\\n  private timerStop$ = new Subject<never>();\\n\\n  private destroy$ = new Subject<never>();\\n  private playing = false;\\n\\n  private width: number;\\n\\n  constructor(\\n    private animationBuilder: AnimationBuilder,\\n    private renderer: Renderer2,\\n    @Inject(PLATFORM_ID) private platformId\\n  ) {}\\n\\n  @HostListener('keyup', ['$event'])\\n  public onKeyUp(event: KeyboardEvent): void {\\n    if (this.useKeyboard && !this.playing) {\\n      this.listKeyManager.onKeydown(event);\\n    }\\n  }\\n\\n  @HostListener('mouseenter')\\n  public onMouseEnter(): void {\\n    this.stopTimer();\\n  }\\n\\n  @HostListener('mouseleave')\\n  public onMouseLeave(): void {\\n    this.startTimer(this._autoplay);\\n  }\\n\\n  @HostListener('mousewheel', ['$event'])\\n  public onMouseWheel(event: WheelEvent): void {\\n    if (this.useMouseWheel) {\\n      event.preventDefault(); // prevent window to scroll\\n      const deltaY = Math.sign(event.deltaY);\\n\\n      if (deltaY > 0) {\\n        this.next();\\n      } else if (deltaY < 0) {\\n        this.previous();\\n      }\\n    }\\n  }\\n\\n  @HostListener('window:resize', ['$event'])\\n  public onResize(event: Event): void {\\n    // Reset carousel when width is resized\\n    // in order to avoid major glitches.\\n    const w = this.getWidth();\\n    if (w !== this.width) {\\n      this.width = w;\\n      this.slideTo(0);\\n    }\\n  }\\n\\n  public ngAfterContentInit(): void {\\n    if (!this.lazyLoad) {\\n      this.slidesList.forEach( (slide) => slide.load = true );\\n    } else {\\n      this.slidesList.first.load = true;\\n      setTimeout( () => {\\n        this.slidesList.find( (s, i) => i === 1 % this.slidesList.length).load = true;\\n        this.slidesList.find( (s, i) => i === (this.slidesList.length - 1) % this.slidesList.length).load = true;\\n      }, this.interval$.getValue() / 2);\\n    }\\n\\n    this.listKeyManager = new ListKeyManager(this.slidesList)\\n      .withVerticalOrientation(false)\\n      .withHorizontalOrientation(this._orientation)\\n      .withWrap(this._loop);\\n\\n    this.listKeyManager.updateActiveItem(0);\\n\\n    this.listKeyManager.change\\n      .pipe(takeUntil(this.destroy$))\\n      .subscribe(() => this.playAnimation());\\n  }\\n\\n  public ngAfterViewInit(): void {\\n    this.width = this.getWidth();\\n\\n    this.autoplay$.pipe(takeUntil(this.destroy$)).subscribe(value => {\\n      this.stopTimer();\\n      this.startTimer(value);\\n    });\\n\\n    this.interval$.pipe(takeUntil(this.destroy$)).subscribe(value => {\\n      this.stopTimer();\\n      this.resetTimer(value);\\n      this.startTimer(this._autoplay);\\n    });\\n\\n    this.maxWidth$\\n      .pipe(takeUntil(this.destroy$))\\n      .subscribe(() => this.slideTo(0));\\n\\n    this.loop$\\n      .pipe(takeUntil(this.destroy$))\\n      .subscribe(value => this.listKeyManager.withWrap(value));\\n\\n    this.orientation$\\n      .pipe(takeUntil(this.destroy$))\\n      .subscribe(value => this.listKeyManager.withHorizontalOrientation(value));\\n\\n    this.slides$\\n      .pipe(\\n        takeUntil(this.destroy$),\\n        filter(value => value && value < this.slidesList.length)\\n      )\\n      .subscribe(value => this.resetSlides(value));\\n  }\\n\\n  public ngOnDestroy(): void {\\n    this.destroy$.next();\\n    this.destroy$.complete();\\n  }\\n\\n  public next(): void {\\n    this.goto(Direction.right);\\n  }\\n\\n  public previous(): void {\\n    this.goto(Direction.left);\\n  }\\n\\n  public slideTo(index: number): void {\\n    this.goto(Direction.index, index);\\n  }\\n\\n  public onPan(event: any, slideElem: HTMLElement): void {\\n    // https://github.com/angular/angular/issues/10541#issuecomment-346539242\\n    // if y velocity is greater, it's a panup/pandown, so ignore.\\n    if (Math.abs(event.velocityY) > Math.abs(event.velocityX)) {\\n      return;\\n    }\\n    let deltaX = event.deltaX;\\n    if (this.isOutOfBounds()) {\\n      deltaX *= 0.2; // decelerate movement;\\n    }\\n\\n    this.renderer.setStyle(slideElem, 'cursor', 'grabbing');\\n    this.renderer.setStyle(\\n      this.carouselList.nativeElement,\\n      'transform',\\n      this.getTranslation(this.getOffset() + deltaX)\\n    );\\n  }\\n\\n  public onPanEnd(event: any, slideElem: HTMLElement): void {\\n    this.renderer.removeStyle(slideElem, 'cursor');\\n\\n    if (\\n      !this.isOutOfBounds() &&\\n      Math.abs(event.deltaX) > this.getWidth() * 0.25\\n    ) {\\n      if (event.deltaX <= 0) {\\n        this.next();\\n        return;\\n      }\\n      this.previous();\\n      return;\\n    }\\n    this.playAnimation(); // slide back, don't change current index\\n  }\\n\\n  private isOutOfBounds(): boolean {\\n    const sign = this.orientation === 'rtl' ? -1 : 1;\\n    const left =\\n      sign *\\n      (this.carouselList.nativeElement.getBoundingClientRect().left -\\n        this.carouselList.nativeElement.offsetParent.getBoundingClientRect()\\n          .left);\\n    const lastIndex = this.slidesList.length - 1;\\n    const width = -this.getWidth() * lastIndex;\\n\\n    return (\\n      (this.listKeyManager.activeItemIndex === 0 && left >= 0) ||\\n      (this.listKeyManager.activeItemIndex === lastIndex && left <= width)\\n    );\\n  }\\n\\n  private isVisible(): boolean {\\n    if (!isPlatformBrowser(this.platformId)) {\\n      return false;\\n    }\\n\\n    const elem = this.carouselContainer.nativeElement;\\n    const docViewTop = window.pageYOffset;\\n    const docViewBottom = docViewTop + window.innerHeight;\\n    const elemOffset = elem.getBoundingClientRect();\\n    const elemTop = docViewTop + elemOffset.top;\\n    const elemBottom = elemTop + elemOffset.height;\\n\\n    return elemBottom <= docViewBottom || elemTop >= docViewTop;\\n  }\\n\\n  private getOffset(): number {\\n    const offset = this.listKeyManager.activeItemIndex * this.getWidth();\\n    const sign = this.orientation === 'rtl' ? 1 : -1;\\n    return sign * offset;\\n  }\\n\\n  private getTranslation(offset: number): string {\\n    return `translateX(${offset}px)`;\\n  }\\n\\n  private getWidth(): number {\\n    return this.carouselContainer.nativeElement.clientWidth;\\n  }\\n\\n  private goto(direction: Direction, index?: number): void {\\n    if (!this.playing) {\\n      const rtl = this.orientation === 'rtl';\\n\\n      switch (direction) {\\n        case Direction.left:\\n          return rtl\\n            ? this.listKeyManager.setNextItemActive()\\n            : this.listKeyManager.setPreviousItemActive();\\n        case Direction.right:\\n          return rtl\\n            ? this.listKeyManager.setPreviousItemActive()\\n            : this.listKeyManager.setNextItemActive();\\n        case Direction.index:\\n          return this.listKeyManager.setActiveItem(index);\\n      }\\n    }\\n  }\\n\\n  private playAnimation(): void {\\n    const translation = this.getTranslation(this.getOffset());\\n    const factory = this.animationBuilder.build(\\n      animate(this.timings, style({ transform: translation }))\\n    );\\n    const animation = factory.create(this.carouselList.nativeElement);\\n\\n    animation.onStart(() => {\\n      this.playing = true;\\n    });\\n    animation.onDone(() => {\\n      this.changeEmitter.emit(this.currentIndex);\\n      this.playing = false;\\n      if (this.lazyLoad) {\\n        this.slidesList.find( (s, i) => i === (this.currentIndex + 1) % this.slidesList.length).load = true;\\n        this.slidesList.find( (s, i) => i === (this.currentIndex - 1 + this.slidesList.length)  % this.slidesList.length).load = true;\\n        this.slidesList.find( (s, i) => i === this.currentIndex).load = true;\\n      }\\n      this.renderer.setStyle(\\n        this.carouselList.nativeElement,\\n        'transform',\\n        translation\\n      );\\n      animation.destroy();\\n    });\\n    animation.play();\\n  }\\n\\n  private resetSlides(slides: number): void {\\n    this.slidesList.reset(this.slidesList.toArray().slice(0, slides));\\n  }\\n\\n  private resetTimer(value: number): void {\\n    this.timer$ = interval(value);\\n  }\\n\\n  private startTimer(autoplay: boolean): void {\\n    if (!autoplay) {\\n      return;\\n    }\\n\\n    this.timer$\\n      .pipe(\\n        takeUntil(this.timerStop$),\\n        takeUntil(this.destroy$),\\n        filter(() => this.isVisible())\\n      )\\n      .subscribe(() => {\\n        this.listKeyManager.withWrap(true).setNextItemActive();\\n        this.listKeyManager.withWrap(this.loop);\\n      });\\n  }\\n\\n  private stopTimer(): void {\\n    this.timerStop$.next();\\n  }\\n}\\n\",\"import { NgModule, ModuleWithProviders, Injectable } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { MatButtonModule } from '@angular/material/button';\\nimport { MatIconModule } from '@angular/material/icon';\\n\\nimport { MatCarouselComponent } from './carousel.component';\\nimport { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';\\nimport {\\n  HammerGestureConfig,\\n  HAMMER_GESTURE_CONFIG,\\n  HammerModule\\n} from '@angular/platform-browser';\\n\\n@Injectable()\\nexport class MatCarouselHammerConfig extends HammerGestureConfig {\\n  overrides = {\\n    pinch: { enable: false },\\n    rotate: { enable: false }\\n  };\\n}\\n@NgModule({\\n  declarations: [MatCarouselComponent, MatCarouselSlideComponent],\\n  imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule],\\n  exports: [MatCarouselComponent, MatCarouselSlideComponent]\\n})\\nexport class MatCarouselModule {\\n  static forRoot(): ModuleWithProviders<MatCarouselModule> {\\n    return {\\n      ngModule: MatCarouselModule,\\n      providers: [\\n        { provide: HAMMER_GESTURE_CONFIG, useClass: MatCarouselHammerConfig }\\n      ]\\n    };\\n  }\\n}\\n\",\"/*\\n * Public API Surface of mat-carousel\\n */\\n\\nexport * from './lib/carousel.component';\\nexport * from './lib/carousel.module';\\nexport * from './lib/carousel';\\n\\nexport * from './lib/carousel-slide/carousel-slide.component';\\nexport * from './lib/carousel-slide/carousel-slide';\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public_api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}],"fesm2015":[{"exports":["MatCarouselComponent","MatCarouselHammerConfig","MatCarouselModule","MatCarouselSlideComponent"],"facadeModuleId":"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/ng-mat-carousel.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel-slide/carousel-slide.component.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.component.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.module.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel-slide/carousel-slide.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/public_api.mjs","/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/ng-mat-carousel.mjs"],"name":"ng-mat-carousel","type":"chunk","dynamicImports":[],"fileName":"ng-mat-carousel.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/animations":["animate","style","*"],"@angular/cdk/a11y":["ListKeyManager"],"@angular/common":["*","isPlatformBrowser","CommonModule"],"@angular/core":["*","TemplateRef","Component","Input","ViewChild","EventEmitter","PLATFORM_ID","Inject","Output","ContentChildren","HostListener","Injectable","NgModule"],"rxjs":["Subject","BehaviorSubject","interval"],"rxjs/operators":["takeUntil","filter"],"@angular/platform-browser":["*","HammerGestureConfig","HAMMER_GESTURE_CONFIG","HammerModule"],"@angular/material/button":["*","MatButtonModule"],"@angular/material/icon":["*","MatIconModule"]},"imports":["@angular/animations","@angular/cdk/a11y","@angular/common","@angular/core","rxjs","rxjs/operators","@angular/platform-browser","@angular/material/button","@angular/material/icon"],"modules":{"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel-slide/carousel-slide.component.mjs":{"code":"function MatCarouselSlideComponent_ng_template_0_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 3);\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext(2);\n        i0.ɵɵstyleProp(\"background-color\", ctx_r1.overlayColor);\n        i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel);\n    }\n}\nfunction MatCarouselSlideComponent_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, MatCarouselSlideComponent_ng_template_0_div_3_Template, 1, 3, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵstyleProp(\"background-image\", ctx_r0.image);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx_r0.hideOverlay);\n    }\n}\nconst _c0$1 = [\"*\"];\nclass MatCarouselSlideComponent {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n        this.overlayColor = '#00000040';\n        this.hideOverlay = false;\n        this.ariaLabel = '';\n        this.disabled = false; // implements ListKeyManagerOption\n        this.load = false;\n    }\n    ngOnInit() {\n        if (this.image) {\n            this.image = this.sanitizer.bypassSecurityTrustStyle(`url(\"${this.image}\")`);\n        }\n    }\n}\n/** @nocollapse */ MatCarouselSlideComponent.ɵfac = function MatCarouselSlideComponent_Factory(t) { return new (t || MatCarouselSlideComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer)); };\n/** @nocollapse */ MatCarouselSlideComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MatCarouselSlideComponent, selectors: [[\"mat-carousel-slide\"]], viewQuery: function MatCarouselSlideComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 5);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n        }\n    }, inputs: { image: \"image\", overlayColor: \"overlayColor\", hideOverlay: \"hideOverlay\", ariaLabel: \"ariaLabel\", disabled: \"disabled\", load: \"load\" }, ngContentSelectors: _c0$1, decls: 1, vars: 0, consts: [[1, \"carousel-slide\"], [1, \"carousel-slide-content\"], [\"class\", \"carousel-slide-overlay\", 3, \"background-color\", 4, \"ngIf\"], [1, \"carousel-slide-overlay\"]], template: function MatCarouselSlideComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵtemplate(0, MatCarouselSlideComponent_ng_template_0_Template, 4, 3, \"ng-template\");\n        }\n    }, dependencies: [i2.NgIf], styles: [\".carousel-slide[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:1}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselSlideComponent, [{\n            type: Component,\n            args: [{ selector: 'mat-carousel-slide', template: \"<ng-template>\\n  <div class=\\\"carousel-slide\\\" [style.background-image]=\\\"image\\\">\\n    <div class=\\\"carousel-slide-content\\\"><ng-content></ng-content></div>\\n    <div\\n      *ngIf=\\\"!hideOverlay\\\"\\n      class=\\\"carousel-slide-overlay\\\"\\n      [attr.aria-label] = \\\"ariaLabel\\\"\\n      [style.background-color]=\\\"overlayColor\\\"\\n    ></div>\\n  </div>\\n</ng-template>\\n\", styles: [\".carousel-slide{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content{width:100%;height:100%;position:absolute;z-index:1}\\n\"] }]\n        }], function () { return [{ type: i1.DomSanitizer }]; }, { image: [{\n                type: Input\n            }], overlayColor: [{\n                type: Input\n            }], hideOverlay: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], load: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }] });\n})();","originalLength":8016,"removedExports":[],"renderedExports":["MatCarouselSlideComponent"],"renderedLength":4389},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.component.mjs":{"code":"const _c0 = [\"carouselContainer\"];\nconst _c1 = [\"carouselList\"];\nfunction MatCarouselComponent_li_4_ng_container_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementContainer(0, 11);\n    }\n    if (rf & 2) {\n        const slide_r6 = i0.ɵɵnextContext().$implicit;\n        i0.ɵɵproperty(\"ngTemplateOutlet\", slide_r6.templateRef);\n    }\n}\nfunction MatCarouselComponent_li_4_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r11 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"li\", 8, 9);\n        i0.ɵɵlistener(\"panleft\", function MatCarouselComponent_li_4_Template_li_panleft_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.onPan($event, _r7)); })(\"panright\", function MatCarouselComponent_li_4_Template_li_panright_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r12 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r12.onPan($event, _r7)); })(\"panend\", function MatCarouselComponent_li_4_Template_li_panend_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.onPanEnd($event, _r7)); })(\"pancancel\", function MatCarouselComponent_li_4_Template_li_pancancel_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r14 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r14.onPanEnd($event, _r7)); });\n        i0.ɵɵtemplate(2, MatCarouselComponent_li_4_ng_container_2_Template, 1, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const slide_r6 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵstyleProp(\"padding-bottom\", ctx_r2.maintainAspectRatio && ctx_r2.proportion ? ctx_r2.proportion + \"%\" : \"0px\")(\"height\", !ctx_r2.maintainAspectRatio && ctx_r2.slideHeight ? ctx_r2.slideHeight : \"0px\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", slide_r6.load);\n    }\n}\nfunction MatCarouselComponent_button_5_mat_icon_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"mat-icon\", 15);\n    }\n    if (rf & 2) {\n        const ctx_r15 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"svgIcon\", ctx_r15.svgIconOverrides.arrowBack);\n    }\n}\nfunction MatCarouselComponent_button_5_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-icon\");\n        i0.ɵɵtext(1, \"arrow_back\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction MatCarouselComponent_button_5_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r19 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function MatCarouselComponent_button_5_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r18.previous()); });\n        i0.ɵɵtemplate(1, MatCarouselComponent_button_5_mat_icon_1_Template, 1, 1, \"mat-icon\", 13);\n        i0.ɵɵtemplate(2, MatCarouselComponent_button_5_ng_template_2_Template, 2, 0, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const _r16 = i0.ɵɵreference(3);\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"color\", ctx_r3.color)(\"disabled\", !ctx_r3.loop && ctx_r3.currentIndex == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r3.svgIconOverrides == null ? null : ctx_r3.svgIconOverrides.arrowBack)(\"ngIfElse\", _r16);\n    }\n}\nfunction MatCarouselComponent_button_6_mat_icon_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"mat-icon\", 15);\n    }\n    if (rf & 2) {\n        const ctx_r20 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"svgIcon\", ctx_r20.svgIconOverrides.arrowForward);\n    }\n}\nfunction MatCarouselComponent_button_6_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-icon\");\n        i0.ɵɵtext(1, \"arrow_forward\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction MatCarouselComponent_button_6_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r24 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function MatCarouselComponent_button_6_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r24); const ctx_r23 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r23.next()); });\n        i0.ɵɵtemplate(1, MatCarouselComponent_button_6_mat_icon_1_Template, 1, 1, \"mat-icon\", 13);\n        i0.ɵɵtemplate(2, MatCarouselComponent_button_6_ng_template_2_Template, 2, 0, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const _r21 = i0.ɵɵreference(3);\n        const ctx_r4 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"color\", ctx_r4.color)(\"disabled\", !ctx_r4.loop && ctx_r4.currentIndex == ctx_r4.slidesList.length - 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r4.svgIconOverrides == null ? null : ctx_r4.svgIconOverrides.arrowForward)(\"ngIfElse\", _r21);\n    }\n}\nfunction MatCarouselComponent_div_7_button_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r29 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function MatCarouselComponent_div_7_button_1_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const i_r27 = restoredCtx.index; const ctx_r28 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r28.slideTo(i_r27)); })(\"focus\", function MatCarouselComponent_div_7_button_1_Template_button_focus_0_listener() { i0.ɵɵrestoreView(_r29); i0.ɵɵnextContext(2); const _r0 = i0.ɵɵreference(1); return i0.ɵɵresetView(_r0.focus()); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const i_r27 = ctx.index;\n        const ctx_r25 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"color\", ctx_r25.color)(\"disabled\", i_r27 == ctx_r25.currentIndex);\n        i0.ɵɵattribute(\"aria-label\", \"Slide #\" + i_r27);\n    }\n}\nfunction MatCarouselComponent_div_7_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 18);\n        i0.ɵɵtemplate(1, MatCarouselComponent_div_7_button_1_Template, 1, 3, \"button\", 19);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r5 = i0.ɵɵnextContext();\n        i0.ɵɵstyleProp(\"flex-direction\", ctx_r5.orientation === \"rtl\" ? \"row-reverse\" : \"row\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r5.slidesList);\n    }\n}\nvar Direction;\n(function (Direction) {\n    Direction[Direction[\"left\"] = 0] = \"left\";\n    Direction[Direction[\"right\"] = 1] = \"right\";\n    Direction[Direction[\"index\"] = 2] = \"index\";\n})(Direction || (Direction = {}));\nclass MatCarouselComponent {\n    set autoplay(value) {\n        this.autoplay$.next(value);\n        this._autoplay = value;\n    }\n    set interval(value) {\n        this.interval$.next(value);\n    }\n    get loop() {\n        return this._loop;\n    }\n    set loop(value) {\n        this.loop$.next(value);\n        this._loop = value;\n    }\n    get maxWidth() {\n        return this._maxWidth;\n    }\n    set maxWidth(value) {\n        this._maxWidth = value;\n        this.maxWidth$.next();\n    }\n    set slides(value) {\n        this.slides$.next(value);\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this.orientation$.next(value);\n        this._orientation = value;\n    }\n    get currentIndex() {\n        if (this.listKeyManager) {\n            return this.listKeyManager.activeItemIndex;\n        }\n        return 0;\n    }\n    get currentSlide() {\n        if (this.listKeyManager) {\n            return this.listKeyManager.activeItem;\n        }\n        return null;\n    }\n    constructor(animationBuilder, renderer, platformId) {\n        this.animationBuilder = animationBuilder;\n        this.renderer = renderer;\n        this.platformId = platformId;\n        this.timings = '250ms ease-in';\n        this.lazyLoad = false;\n        this.hideArrows = true;\n        this.hideIndicators = true;\n        this.ariaLabel = 'Sliding carousel';\n        this.color = 'accent';\n        this.maintainAspectRatio = true;\n        this.proportion = 25;\n        this.slideHeight = '100%';\n        this.useKeyboard = false;\n        this.useMouseWheel = false;\n        this.changeEmitter = new EventEmitter();\n        this._autoplay = true;\n        this.autoplay$ = new Subject();\n        this.interval$ = new BehaviorSubject(5000);\n        this.slides$ = new BehaviorSubject(null);\n        this._maxWidth = 'auto';\n        this.maxWidth$ = new Subject();\n        this._loop = true;\n        this.loop$ = new Subject();\n        this._orientation = 'ltr';\n        this.orientation$ = new Subject();\n        this.timerStop$ = new Subject();\n        this.destroy$ = new Subject();\n        this.playing = false;\n    }\n    onKeyUp(event) {\n        if (this.useKeyboard && !this.playing) {\n            this.listKeyManager.onKeydown(event);\n        }\n    }\n    onMouseEnter() {\n        this.stopTimer();\n    }\n    onMouseLeave() {\n        this.startTimer(this._autoplay);\n    }\n    onMouseWheel(event) {\n        if (this.useMouseWheel) {\n            event.preventDefault(); // prevent window to scroll\n            const deltaY = Math.sign(event.deltaY);\n            if (deltaY > 0) {\n                this.next();\n            }\n            else if (deltaY < 0) {\n                this.previous();\n            }\n        }\n    }\n    onResize(event) {\n        // Reset carousel when width is resized\n        // in order to avoid major glitches.\n        const w = this.getWidth();\n        if (w !== this.width) {\n            this.width = w;\n            this.slideTo(0);\n        }\n    }\n    ngAfterContentInit() {\n        if (!this.lazyLoad) {\n            this.slidesList.forEach((slide) => slide.load = true);\n        }\n        else {\n            this.slidesList.first.load = true;\n            setTimeout(() => {\n                this.slidesList.find((s, i) => i === 1 % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === (this.slidesList.length - 1) % this.slidesList.length).load = true;\n            }, this.interval$.getValue() / 2);\n        }\n        this.listKeyManager = new ListKeyManager(this.slidesList)\n            .withVerticalOrientation(false)\n            .withHorizontalOrientation(this._orientation)\n            .withWrap(this._loop);\n        this.listKeyManager.updateActiveItem(0);\n        this.listKeyManager.change\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.playAnimation());\n    }\n    ngAfterViewInit() {\n        this.width = this.getWidth();\n        this.autoplay$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n            this.stopTimer();\n            this.startTimer(value);\n        });\n        this.interval$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n            this.stopTimer();\n            this.resetTimer(value);\n            this.startTimer(this._autoplay);\n        });\n        this.maxWidth$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.slideTo(0));\n        this.loop$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => this.listKeyManager.withWrap(value));\n        this.orientation$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => this.listKeyManager.withHorizontalOrientation(value));\n        this.slides$\n            .pipe(takeUntil(this.destroy$), filter(value => value && value < this.slidesList.length))\n            .subscribe(value => this.resetSlides(value));\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    next() {\n        this.goto(Direction.right);\n    }\n    previous() {\n        this.goto(Direction.left);\n    }\n    slideTo(index) {\n        this.goto(Direction.index, index);\n    }\n    onPan(event, slideElem) {\n        // https://github.com/angular/angular/issues/10541#issuecomment-346539242\n        // if y velocity is greater, it's a panup/pandown, so ignore.\n        if (Math.abs(event.velocityY) > Math.abs(event.velocityX)) {\n            return;\n        }\n        let deltaX = event.deltaX;\n        if (this.isOutOfBounds()) {\n            deltaX *= 0.2; // decelerate movement;\n        }\n        this.renderer.setStyle(slideElem, 'cursor', 'grabbing');\n        this.renderer.setStyle(this.carouselList.nativeElement, 'transform', this.getTranslation(this.getOffset() + deltaX));\n    }\n    onPanEnd(event, slideElem) {\n        this.renderer.removeStyle(slideElem, 'cursor');\n        if (!this.isOutOfBounds() &&\n            Math.abs(event.deltaX) > this.getWidth() * 0.25) {\n            if (event.deltaX <= 0) {\n                this.next();\n                return;\n            }\n            this.previous();\n            return;\n        }\n        this.playAnimation(); // slide back, don't change current index\n    }\n    isOutOfBounds() {\n        const sign = this.orientation === 'rtl' ? -1 : 1;\n        const left = sign *\n            (this.carouselList.nativeElement.getBoundingClientRect().left -\n                this.carouselList.nativeElement.offsetParent.getBoundingClientRect()\n                    .left);\n        const lastIndex = this.slidesList.length - 1;\n        const width = -this.getWidth() * lastIndex;\n        return ((this.listKeyManager.activeItemIndex === 0 && left >= 0) ||\n            (this.listKeyManager.activeItemIndex === lastIndex && left <= width));\n    }\n    isVisible() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return false;\n        }\n        const elem = this.carouselContainer.nativeElement;\n        const docViewTop = window.pageYOffset;\n        const docViewBottom = docViewTop + window.innerHeight;\n        const elemOffset = elem.getBoundingClientRect();\n        const elemTop = docViewTop + elemOffset.top;\n        const elemBottom = elemTop + elemOffset.height;\n        return elemBottom <= docViewBottom || elemTop >= docViewTop;\n    }\n    getOffset() {\n        const offset = this.listKeyManager.activeItemIndex * this.getWidth();\n        const sign = this.orientation === 'rtl' ? 1 : -1;\n        return sign * offset;\n    }\n    getTranslation(offset) {\n        return `translateX(${offset}px)`;\n    }\n    getWidth() {\n        return this.carouselContainer.nativeElement.clientWidth;\n    }\n    goto(direction, index) {\n        if (!this.playing) {\n            const rtl = this.orientation === 'rtl';\n            switch (direction) {\n                case Direction.left:\n                    return rtl\n                        ? this.listKeyManager.setNextItemActive()\n                        : this.listKeyManager.setPreviousItemActive();\n                case Direction.right:\n                    return rtl\n                        ? this.listKeyManager.setPreviousItemActive()\n                        : this.listKeyManager.setNextItemActive();\n                case Direction.index:\n                    return this.listKeyManager.setActiveItem(index);\n            }\n        }\n    }\n    playAnimation() {\n        const translation = this.getTranslation(this.getOffset());\n        const factory = this.animationBuilder.build(animate(this.timings, style({ transform: translation })));\n        const animation = factory.create(this.carouselList.nativeElement);\n        animation.onStart(() => {\n            this.playing = true;\n        });\n        animation.onDone(() => {\n            this.changeEmitter.emit(this.currentIndex);\n            this.playing = false;\n            if (this.lazyLoad) {\n                this.slidesList.find((s, i) => i === (this.currentIndex + 1) % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === (this.currentIndex - 1 + this.slidesList.length) % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === this.currentIndex).load = true;\n            }\n            this.renderer.setStyle(this.carouselList.nativeElement, 'transform', translation);\n            animation.destroy();\n        });\n        animation.play();\n    }\n    resetSlides(slides) {\n        this.slidesList.reset(this.slidesList.toArray().slice(0, slides));\n    }\n    resetTimer(value) {\n        this.timer$ = interval(value);\n    }\n    startTimer(autoplay) {\n        if (!autoplay) {\n            return;\n        }\n        this.timer$\n            .pipe(takeUntil(this.timerStop$), takeUntil(this.destroy$), filter(() => this.isVisible()))\n            .subscribe(() => {\n            this.listKeyManager.withWrap(true).setNextItemActive();\n            this.listKeyManager.withWrap(this.loop);\n        });\n    }\n    stopTimer() {\n        this.timerStop$.next();\n    }\n}\n/** @nocollapse */ MatCarouselComponent.ɵfac = function MatCarouselComponent_Factory(t) { return new (t || MatCarouselComponent)(i0.ɵɵdirectiveInject(i1$1.AnimationBuilder), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID)); };\n/** @nocollapse */ MatCarouselComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MatCarouselComponent, selectors: [[\"mat-carousel\"]], contentQueries: function MatCarouselComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatCarouselSlideComponent, 4);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slidesList = _t);\n        }\n    }, viewQuery: function MatCarouselComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n            i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carouselContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carouselList = _t.first);\n        }\n    }, hostBindings: function MatCarouselComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵlistener(\"keyup\", function MatCarouselComponent_keyup_HostBindingHandler($event) { return ctx.onKeyUp($event); })(\"mouseenter\", function MatCarouselComponent_mouseenter_HostBindingHandler() { return ctx.onMouseEnter(); })(\"mouseleave\", function MatCarouselComponent_mouseleave_HostBindingHandler() { return ctx.onMouseLeave(); })(\"mousewheel\", function MatCarouselComponent_mousewheel_HostBindingHandler($event) { return ctx.onMouseWheel($event); })(\"resize\", function MatCarouselComponent_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, i0.ɵɵresolveWindow);\n        }\n    }, inputs: { timings: \"timings\", lazyLoad: \"lazyLoad\", svgIconOverrides: \"svgIconOverrides\", autoplay: \"autoplay\", interval: \"interval\", loop: \"loop\", hideArrows: \"hideArrows\", hideIndicators: \"hideIndicators\", ariaLabel: \"ariaLabel\", color: \"color\", maxWidth: \"maxWidth\", maintainAspectRatio: \"maintainAspectRatio\", proportion: \"proportion\", slideHeight: \"slideHeight\", slides: \"slides\", useKeyboard: \"useKeyboard\", useMouseWheel: \"useMouseWheel\", orientation: \"orientation\" }, outputs: { changeEmitter: \"changeEmitter\" }, decls: 8, vars: 13, consts: [[\"tabindex\", \"0\", 1, \"carousel\"], [\"carouselContainer\", \"\"], [\"role\", \"listbox\", 1, \"carousel-list\"], [\"carouselList\", \"\"], [\"class\", \"carousel-slide\", \"role\", \"option\", 3, \"padding-bottom\", \"height\", \"panleft\", \"panright\", \"panend\", \"pancancel\", 4, \"ngFor\", \"ngForOf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Previous slide\", 3, \"color\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Next slide\", 3, \"color\", \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"carousel-indicators\", \"tabindex\", \"-1\", 3, \"flex-direction\", 4, \"ngIf\"], [\"role\", \"option\", 1, \"carousel-slide\", 3, \"panleft\", \"panright\", \"panend\", \"pancancel\"], [\"carouselSlide\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Previous slide\", 3, \"color\", \"disabled\", \"click\"], [3, \"svgIcon\", 4, \"ngIf\", \"ngIfElse\"], [\"defaultArrowBack\", \"\"], [3, \"svgIcon\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Next slide\", 3, \"color\", \"disabled\", \"click\"], [\"defaultArrowForward\", \"\"], [\"tabindex\", \"-1\", 1, \"carousel-indicators\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"mat-mini-fab\", \"\", 3, \"color\", \"disabled\", \"click\", \"focus\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"mat-mini-fab\", \"\", 3, \"color\", \"disabled\", \"click\", \"focus\"]], template: function MatCarouselComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"ul\", 2, 3);\n            i0.ɵɵtemplate(4, MatCarouselComponent_li_4_Template, 3, 5, \"li\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(5, MatCarouselComponent_button_5_Template, 4, 4, \"button\", 5);\n            i0.ɵɵtemplate(6, MatCarouselComponent_button_6_Template, 4, 4, \"button\", 6);\n            i0.ɵɵtemplate(7, MatCarouselComponent_div_7_Template, 2, 3, \"div\", 7);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵstyleProp(\"max-width\", ctx.maxWidth)(\"height\", !ctx.maintainAspectRatio ? \"100%\" : \"auto\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵstyleProp(\"flex-direction\", ctx.orientation === \"rtl\" ? \"row-reverse\" : \"row\")(\"height\", !ctx.maintainAspectRatio ? \"100%\" : \"auto\");\n            i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.slidesList);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.hideArrows);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.hideArrows);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.hideIndicators);\n        }\n    }, dependencies: [i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i3.MatIconButton, i3.MatMiniFabButton, i4.MatIcon], styles: [\".carousel[_ngcontent-%COMP%]{width:100%;position:relative;overflow:hidden;outline:none}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{position:absolute;z-index:1;top:50%;transform:translateY(-50%)}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:first-of-type{left:30px}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:last-of-type{right:30px}.carousel-list[_ngcontent-%COMP%]{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide[_ngcontent-%COMP%]{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide[_ngcontent-%COMP%]:hover{cursor:grab}.carousel-indicators[_ngcontent-%COMP%]{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;transform:translate(-50%);outline:none}.carousel-indicators[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{width:10px;height:10px;margin:7.5px}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselComponent, [{\n            type: Component,\n            args: [{ selector: 'mat-carousel', template: \"<div\\n  #carouselContainer\\n  class=\\\"carousel\\\"\\n  tabindex=\\\"0\\\"\\n  [style.max-width]=\\\"maxWidth\\\"\\n  [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n>\\n  <ul\\n    #carouselList\\n    class=\\\"carousel-list\\\"\\n    role=\\\"listbox\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n    [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n  >\\n    <li\\n      #carouselSlide\\n      *ngFor=\\\"let slide of slidesList\\\"\\n      class=\\\"carousel-slide\\\"\\n      role=\\\"option\\\"\\n      [style.padding-bottom]=\\\"maintainAspectRatio && proportion ? proportion + '%': '0px'\\\"\\n      [style.height]=\\\"!maintainAspectRatio && slideHeight ? slideHeight : '0px'\\\"\\n      (panleft)=\\\"onPan($event, carouselSlide)\\\"\\n      (panright)=\\\"onPan($event, carouselSlide)\\\"\\n      (panend)=\\\"onPanEnd($event, carouselSlide)\\\"\\n      (pancancel)=\\\"onPanEnd($event, carouselSlide)\\\"\\n    >\\n      <ng-container *ngIf=\\\"slide.load\\\" [ngTemplateOutlet]=\\\"slide.templateRef\\\"></ng-container>\\n    </li>\\n  </ul>\\n\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Previous slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == 0\\\"\\n    (click)=\\\"previous()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowBack; else: defaultArrowBack\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowBack\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowBack>\\n      <mat-icon>arrow_back</mat-icon>\\n    </ng-template>\\n  </button>\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Next slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == slidesList.length - 1\\\"\\n    (click)=\\\"next()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowForward; else: defaultArrowForward\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowForward\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowForward>\\n      <mat-icon>arrow_forward</mat-icon>\\n    </ng-template>\\n  </button>\\n\\n  <div\\n    *ngIf=\\\"!hideIndicators\\\"\\n    class=\\\"carousel-indicators\\\"\\n    tabindex=\\\"-1\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n  >\\n    <button\\n      *ngFor=\\\"let slide of slidesList; let i = index\\\"\\n      type=\\\"button\\\"\\n      tabindex=\\\"-1\\\"\\n      mat-mini-fab\\n      [color]=\\\"color\\\"\\n      [attr.aria-label]=\\\"'Slide #' + i\\\"\\n      [disabled]=\\\"i == currentIndex\\\"\\n      (click)=\\\"slideTo(i)\\\"\\n      (focus)=\\\"carouselContainer.focus()\\\"\\n    ></button>\\n  </div>\\n</div>\\n\", styles: [\".carousel{width:100%;position:relative;overflow:hidden;outline:none}.carousel>button{position:absolute;z-index:1;top:50%;transform:translateY(-50%)}.carousel>button:first-of-type{left:30px}.carousel>button:last-of-type{right:30px}.carousel-list{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide:hover{cursor:grab}.carousel-indicators{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;transform:translate(-50%);outline:none}.carousel-indicators>button{width:10px;height:10px;margin:7.5px}\\n\"] }]\n        }], function () {\n        return [{ type: i1$1.AnimationBuilder }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, { timings: [{\n                type: Input\n            }], lazyLoad: [{\n                type: Input\n            }], svgIconOverrides: [{\n                type: Input\n            }], autoplay: [{\n                type: Input\n            }], interval: [{\n                type: Input\n            }], loop: [{\n                type: Input\n            }], hideArrows: [{\n                type: Input\n            }], hideIndicators: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], maxWidth: [{\n                type: Input\n            }], maintainAspectRatio: [{\n                type: Input\n            }], proportion: [{\n                type: Input\n            }], slideHeight: [{\n                type: Input\n            }], slides: [{\n                type: Input\n            }], useKeyboard: [{\n                type: Input\n            }], useMouseWheel: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], changeEmitter: [{\n                type: Output\n            }], slidesList: [{\n                type: ContentChildren,\n                args: [MatCarouselSlideComponent]\n            }], carouselContainer: [{\n                type: ViewChild,\n                args: ['carouselContainer']\n            }], carouselList: [{\n                type: ViewChild,\n                args: ['carouselList']\n            }], onKeyUp: [{\n                type: HostListener,\n                args: ['keyup', ['$event']]\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }], onMouseWheel: [{\n                type: HostListener,\n                args: ['mousewheel', ['$event']]\n            }], onResize: [{\n                type: HostListener,\n                args: ['window:resize', ['$event']]\n            }] });\n})();","originalLength":65280,"removedExports":[],"renderedExports":["MatCarouselComponent"],"renderedLength":28469},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.module.mjs":{"code":"class MatCarouselHammerConfig extends HammerGestureConfig {\n    constructor() {\n        super(...arguments);\n        this.overrides = {\n            pinch: { enable: false },\n            rotate: { enable: false }\n        };\n    }\n}\n/** @nocollapse */ MatCarouselHammerConfig.ɵfac = /** @pureOrBreakMyCode */ function () { let ɵMatCarouselHammerConfig_BaseFactory; return function MatCarouselHammerConfig_Factory(t) { return (ɵMatCarouselHammerConfig_BaseFactory || (ɵMatCarouselHammerConfig_BaseFactory = i0.ɵɵgetInheritedFactory(MatCarouselHammerConfig)))(t || MatCarouselHammerConfig); }; }();\n/** @nocollapse */ MatCarouselHammerConfig.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: MatCarouselHammerConfig, factory: MatCarouselHammerConfig.ɵfac });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselHammerConfig, [{\n            type: Injectable\n        }], null, null);\n})();\nclass MatCarouselModule {\n    static forRoot() {\n        return {\n            ngModule: MatCarouselModule,\n            providers: [\n                { provide: HAMMER_GESTURE_CONFIG, useClass: MatCarouselHammerConfig }\n            ]\n        };\n    }\n}\n/** @nocollapse */ MatCarouselModule.ɵfac = function MatCarouselModule_Factory(t) { return new (t || MatCarouselModule)(); };\n/** @nocollapse */ MatCarouselModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: MatCarouselModule });\n/** @nocollapse */ MatCarouselModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselModule, [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatCarouselComponent, MatCarouselSlideComponent],\n                    imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule],\n                    exports: [MatCarouselComponent, MatCarouselSlideComponent]\n                }]\n        }], null, null);\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(MatCarouselModule, { declarations: [MatCarouselComponent, MatCarouselSlideComponent], imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule], exports: [MatCarouselComponent, MatCarouselSlideComponent] }); })();","originalLength":6194,"removedExports":[],"renderedExports":["MatCarouselHammerConfig","MatCarouselModule"],"renderedLength":2392},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel.mjs":{"code":"","originalLength":1189,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/lib/carousel-slide/carousel-slide.mjs":{"code":"","originalLength":625,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/public_api.mjs":{"code":"/*\n * Public API Surface of mat-carousel\n */","originalLength":1084,"removedExports":[],"renderedExports":[],"renderedLength":44},"/Users/phmalope/devStuff/projects/ng-mat-carousel/dist/carousel/esm2020/ng-mat-carousel.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":504,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i1$1 from '@angular/animations';\nimport { animate, style } from '@angular/animations';\nimport { ListKeyManager } from '@angular/cdk/a11y';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { TemplateRef, Component, Input, ViewChild, EventEmitter, PLATFORM_ID, Inject, Output, ContentChildren, HostListener, Injectable, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, interval } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG, HammerModule } from '@angular/platform-browser';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i4 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\n\nfunction MatCarouselSlideComponent_ng_template_0_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 3);\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext(2);\n        i0.ɵɵstyleProp(\"background-color\", ctx_r1.overlayColor);\n        i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel);\n    }\n}\nfunction MatCarouselSlideComponent_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, MatCarouselSlideComponent_ng_template_0_div_3_Template, 1, 3, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵstyleProp(\"background-image\", ctx_r0.image);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx_r0.hideOverlay);\n    }\n}\nconst _c0$1 = [\"*\"];\nclass MatCarouselSlideComponent {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n        this.overlayColor = '#00000040';\n        this.hideOverlay = false;\n        this.ariaLabel = '';\n        this.disabled = false; // implements ListKeyManagerOption\n        this.load = false;\n    }\n    ngOnInit() {\n        if (this.image) {\n            this.image = this.sanitizer.bypassSecurityTrustStyle(`url(\"${this.image}\")`);\n        }\n    }\n}\n/** @nocollapse */ MatCarouselSlideComponent.ɵfac = function MatCarouselSlideComponent_Factory(t) { return new (t || MatCarouselSlideComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer)); };\n/** @nocollapse */ MatCarouselSlideComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MatCarouselSlideComponent, selectors: [[\"mat-carousel-slide\"]], viewQuery: function MatCarouselSlideComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 5);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n        }\n    }, inputs: { image: \"image\", overlayColor: \"overlayColor\", hideOverlay: \"hideOverlay\", ariaLabel: \"ariaLabel\", disabled: \"disabled\", load: \"load\" }, ngContentSelectors: _c0$1, decls: 1, vars: 0, consts: [[1, \"carousel-slide\"], [1, \"carousel-slide-content\"], [\"class\", \"carousel-slide-overlay\", 3, \"background-color\", 4, \"ngIf\"], [1, \"carousel-slide-overlay\"]], template: function MatCarouselSlideComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵtemplate(0, MatCarouselSlideComponent_ng_template_0_Template, 4, 3, \"ng-template\");\n        }\n    }, dependencies: [i2.NgIf], styles: [\".carousel-slide[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;z-index:1}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselSlideComponent, [{\n            type: Component,\n            args: [{ selector: 'mat-carousel-slide', template: \"<ng-template>\\n  <div class=\\\"carousel-slide\\\" [style.background-image]=\\\"image\\\">\\n    <div class=\\\"carousel-slide-content\\\"><ng-content></ng-content></div>\\n    <div\\n      *ngIf=\\\"!hideOverlay\\\"\\n      class=\\\"carousel-slide-overlay\\\"\\n      [attr.aria-label] = \\\"ariaLabel\\\"\\n      [style.background-color]=\\\"overlayColor\\\"\\n    ></div>\\n  </div>\\n</ng-template>\\n\", styles: [\".carousel-slide{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content{width:100%;height:100%;position:absolute;z-index:1}\\n\"] }]\n        }], function () { return [{ type: i1.DomSanitizer }]; }, { image: [{\n                type: Input\n            }], overlayColor: [{\n                type: Input\n            }], hideOverlay: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], load: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }] });\n})();\n\nconst _c0 = [\"carouselContainer\"];\nconst _c1 = [\"carouselList\"];\nfunction MatCarouselComponent_li_4_ng_container_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementContainer(0, 11);\n    }\n    if (rf & 2) {\n        const slide_r6 = i0.ɵɵnextContext().$implicit;\n        i0.ɵɵproperty(\"ngTemplateOutlet\", slide_r6.templateRef);\n    }\n}\nfunction MatCarouselComponent_li_4_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r11 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"li\", 8, 9);\n        i0.ɵɵlistener(\"panleft\", function MatCarouselComponent_li_4_Template_li_panleft_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.onPan($event, _r7)); })(\"panright\", function MatCarouselComponent_li_4_Template_li_panright_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r12 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r12.onPan($event, _r7)); })(\"panend\", function MatCarouselComponent_li_4_Template_li_panend_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.onPanEnd($event, _r7)); })(\"pancancel\", function MatCarouselComponent_li_4_Template_li_pancancel_0_listener($event) { i0.ɵɵrestoreView(_r11); const _r7 = i0.ɵɵreference(1); const ctx_r14 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r14.onPanEnd($event, _r7)); });\n        i0.ɵɵtemplate(2, MatCarouselComponent_li_4_ng_container_2_Template, 1, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const slide_r6 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵstyleProp(\"padding-bottom\", ctx_r2.maintainAspectRatio && ctx_r2.proportion ? ctx_r2.proportion + \"%\" : \"0px\")(\"height\", !ctx_r2.maintainAspectRatio && ctx_r2.slideHeight ? ctx_r2.slideHeight : \"0px\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", slide_r6.load);\n    }\n}\nfunction MatCarouselComponent_button_5_mat_icon_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"mat-icon\", 15);\n    }\n    if (rf & 2) {\n        const ctx_r15 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"svgIcon\", ctx_r15.svgIconOverrides.arrowBack);\n    }\n}\nfunction MatCarouselComponent_button_5_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-icon\");\n        i0.ɵɵtext(1, \"arrow_back\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction MatCarouselComponent_button_5_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r19 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function MatCarouselComponent_button_5_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r18.previous()); });\n        i0.ɵɵtemplate(1, MatCarouselComponent_button_5_mat_icon_1_Template, 1, 1, \"mat-icon\", 13);\n        i0.ɵɵtemplate(2, MatCarouselComponent_button_5_ng_template_2_Template, 2, 0, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const _r16 = i0.ɵɵreference(3);\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"color\", ctx_r3.color)(\"disabled\", !ctx_r3.loop && ctx_r3.currentIndex == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r3.svgIconOverrides == null ? null : ctx_r3.svgIconOverrides.arrowBack)(\"ngIfElse\", _r16);\n    }\n}\nfunction MatCarouselComponent_button_6_mat_icon_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"mat-icon\", 15);\n    }\n    if (rf & 2) {\n        const ctx_r20 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"svgIcon\", ctx_r20.svgIconOverrides.arrowForward);\n    }\n}\nfunction MatCarouselComponent_button_6_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-icon\");\n        i0.ɵɵtext(1, \"arrow_forward\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction MatCarouselComponent_button_6_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r24 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function MatCarouselComponent_button_6_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r24); const ctx_r23 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r23.next()); });\n        i0.ɵɵtemplate(1, MatCarouselComponent_button_6_mat_icon_1_Template, 1, 1, \"mat-icon\", 13);\n        i0.ɵɵtemplate(2, MatCarouselComponent_button_6_ng_template_2_Template, 2, 0, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const _r21 = i0.ɵɵreference(3);\n        const ctx_r4 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"color\", ctx_r4.color)(\"disabled\", !ctx_r4.loop && ctx_r4.currentIndex == ctx_r4.slidesList.length - 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r4.svgIconOverrides == null ? null : ctx_r4.svgIconOverrides.arrowForward)(\"ngIfElse\", _r21);\n    }\n}\nfunction MatCarouselComponent_div_7_button_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r29 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function MatCarouselComponent_div_7_button_1_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r29); const i_r27 = restoredCtx.index; const ctx_r28 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r28.slideTo(i_r27)); })(\"focus\", function MatCarouselComponent_div_7_button_1_Template_button_focus_0_listener() { i0.ɵɵrestoreView(_r29); i0.ɵɵnextContext(2); const _r0 = i0.ɵɵreference(1); return i0.ɵɵresetView(_r0.focus()); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const i_r27 = ctx.index;\n        const ctx_r25 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"color\", ctx_r25.color)(\"disabled\", i_r27 == ctx_r25.currentIndex);\n        i0.ɵɵattribute(\"aria-label\", \"Slide #\" + i_r27);\n    }\n}\nfunction MatCarouselComponent_div_7_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 18);\n        i0.ɵɵtemplate(1, MatCarouselComponent_div_7_button_1_Template, 1, 3, \"button\", 19);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r5 = i0.ɵɵnextContext();\n        i0.ɵɵstyleProp(\"flex-direction\", ctx_r5.orientation === \"rtl\" ? \"row-reverse\" : \"row\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r5.slidesList);\n    }\n}\nvar Direction;\n(function (Direction) {\n    Direction[Direction[\"left\"] = 0] = \"left\";\n    Direction[Direction[\"right\"] = 1] = \"right\";\n    Direction[Direction[\"index\"] = 2] = \"index\";\n})(Direction || (Direction = {}));\nclass MatCarouselComponent {\n    set autoplay(value) {\n        this.autoplay$.next(value);\n        this._autoplay = value;\n    }\n    set interval(value) {\n        this.interval$.next(value);\n    }\n    get loop() {\n        return this._loop;\n    }\n    set loop(value) {\n        this.loop$.next(value);\n        this._loop = value;\n    }\n    get maxWidth() {\n        return this._maxWidth;\n    }\n    set maxWidth(value) {\n        this._maxWidth = value;\n        this.maxWidth$.next();\n    }\n    set slides(value) {\n        this.slides$.next(value);\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this.orientation$.next(value);\n        this._orientation = value;\n    }\n    get currentIndex() {\n        if (this.listKeyManager) {\n            return this.listKeyManager.activeItemIndex;\n        }\n        return 0;\n    }\n    get currentSlide() {\n        if (this.listKeyManager) {\n            return this.listKeyManager.activeItem;\n        }\n        return null;\n    }\n    constructor(animationBuilder, renderer, platformId) {\n        this.animationBuilder = animationBuilder;\n        this.renderer = renderer;\n        this.platformId = platformId;\n        this.timings = '250ms ease-in';\n        this.lazyLoad = false;\n        this.hideArrows = true;\n        this.hideIndicators = true;\n        this.ariaLabel = 'Sliding carousel';\n        this.color = 'accent';\n        this.maintainAspectRatio = true;\n        this.proportion = 25;\n        this.slideHeight = '100%';\n        this.useKeyboard = false;\n        this.useMouseWheel = false;\n        this.changeEmitter = new EventEmitter();\n        this._autoplay = true;\n        this.autoplay$ = new Subject();\n        this.interval$ = new BehaviorSubject(5000);\n        this.slides$ = new BehaviorSubject(null);\n        this._maxWidth = 'auto';\n        this.maxWidth$ = new Subject();\n        this._loop = true;\n        this.loop$ = new Subject();\n        this._orientation = 'ltr';\n        this.orientation$ = new Subject();\n        this.timerStop$ = new Subject();\n        this.destroy$ = new Subject();\n        this.playing = false;\n    }\n    onKeyUp(event) {\n        if (this.useKeyboard && !this.playing) {\n            this.listKeyManager.onKeydown(event);\n        }\n    }\n    onMouseEnter() {\n        this.stopTimer();\n    }\n    onMouseLeave() {\n        this.startTimer(this._autoplay);\n    }\n    onMouseWheel(event) {\n        if (this.useMouseWheel) {\n            event.preventDefault(); // prevent window to scroll\n            const deltaY = Math.sign(event.deltaY);\n            if (deltaY > 0) {\n                this.next();\n            }\n            else if (deltaY < 0) {\n                this.previous();\n            }\n        }\n    }\n    onResize(event) {\n        // Reset carousel when width is resized\n        // in order to avoid major glitches.\n        const w = this.getWidth();\n        if (w !== this.width) {\n            this.width = w;\n            this.slideTo(0);\n        }\n    }\n    ngAfterContentInit() {\n        if (!this.lazyLoad) {\n            this.slidesList.forEach((slide) => slide.load = true);\n        }\n        else {\n            this.slidesList.first.load = true;\n            setTimeout(() => {\n                this.slidesList.find((s, i) => i === 1 % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === (this.slidesList.length - 1) % this.slidesList.length).load = true;\n            }, this.interval$.getValue() / 2);\n        }\n        this.listKeyManager = new ListKeyManager(this.slidesList)\n            .withVerticalOrientation(false)\n            .withHorizontalOrientation(this._orientation)\n            .withWrap(this._loop);\n        this.listKeyManager.updateActiveItem(0);\n        this.listKeyManager.change\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.playAnimation());\n    }\n    ngAfterViewInit() {\n        this.width = this.getWidth();\n        this.autoplay$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n            this.stopTimer();\n            this.startTimer(value);\n        });\n        this.interval$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n            this.stopTimer();\n            this.resetTimer(value);\n            this.startTimer(this._autoplay);\n        });\n        this.maxWidth$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.slideTo(0));\n        this.loop$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => this.listKeyManager.withWrap(value));\n        this.orientation$\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => this.listKeyManager.withHorizontalOrientation(value));\n        this.slides$\n            .pipe(takeUntil(this.destroy$), filter(value => value && value < this.slidesList.length))\n            .subscribe(value => this.resetSlides(value));\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    next() {\n        this.goto(Direction.right);\n    }\n    previous() {\n        this.goto(Direction.left);\n    }\n    slideTo(index) {\n        this.goto(Direction.index, index);\n    }\n    onPan(event, slideElem) {\n        // https://github.com/angular/angular/issues/10541#issuecomment-346539242\n        // if y velocity is greater, it's a panup/pandown, so ignore.\n        if (Math.abs(event.velocityY) > Math.abs(event.velocityX)) {\n            return;\n        }\n        let deltaX = event.deltaX;\n        if (this.isOutOfBounds()) {\n            deltaX *= 0.2; // decelerate movement;\n        }\n        this.renderer.setStyle(slideElem, 'cursor', 'grabbing');\n        this.renderer.setStyle(this.carouselList.nativeElement, 'transform', this.getTranslation(this.getOffset() + deltaX));\n    }\n    onPanEnd(event, slideElem) {\n        this.renderer.removeStyle(slideElem, 'cursor');\n        if (!this.isOutOfBounds() &&\n            Math.abs(event.deltaX) > this.getWidth() * 0.25) {\n            if (event.deltaX <= 0) {\n                this.next();\n                return;\n            }\n            this.previous();\n            return;\n        }\n        this.playAnimation(); // slide back, don't change current index\n    }\n    isOutOfBounds() {\n        const sign = this.orientation === 'rtl' ? -1 : 1;\n        const left = sign *\n            (this.carouselList.nativeElement.getBoundingClientRect().left -\n                this.carouselList.nativeElement.offsetParent.getBoundingClientRect()\n                    .left);\n        const lastIndex = this.slidesList.length - 1;\n        const width = -this.getWidth() * lastIndex;\n        return ((this.listKeyManager.activeItemIndex === 0 && left >= 0) ||\n            (this.listKeyManager.activeItemIndex === lastIndex && left <= width));\n    }\n    isVisible() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return false;\n        }\n        const elem = this.carouselContainer.nativeElement;\n        const docViewTop = window.pageYOffset;\n        const docViewBottom = docViewTop + window.innerHeight;\n        const elemOffset = elem.getBoundingClientRect();\n        const elemTop = docViewTop + elemOffset.top;\n        const elemBottom = elemTop + elemOffset.height;\n        return elemBottom <= docViewBottom || elemTop >= docViewTop;\n    }\n    getOffset() {\n        const offset = this.listKeyManager.activeItemIndex * this.getWidth();\n        const sign = this.orientation === 'rtl' ? 1 : -1;\n        return sign * offset;\n    }\n    getTranslation(offset) {\n        return `translateX(${offset}px)`;\n    }\n    getWidth() {\n        return this.carouselContainer.nativeElement.clientWidth;\n    }\n    goto(direction, index) {\n        if (!this.playing) {\n            const rtl = this.orientation === 'rtl';\n            switch (direction) {\n                case Direction.left:\n                    return rtl\n                        ? this.listKeyManager.setNextItemActive()\n                        : this.listKeyManager.setPreviousItemActive();\n                case Direction.right:\n                    return rtl\n                        ? this.listKeyManager.setPreviousItemActive()\n                        : this.listKeyManager.setNextItemActive();\n                case Direction.index:\n                    return this.listKeyManager.setActiveItem(index);\n            }\n        }\n    }\n    playAnimation() {\n        const translation = this.getTranslation(this.getOffset());\n        const factory = this.animationBuilder.build(animate(this.timings, style({ transform: translation })));\n        const animation = factory.create(this.carouselList.nativeElement);\n        animation.onStart(() => {\n            this.playing = true;\n        });\n        animation.onDone(() => {\n            this.changeEmitter.emit(this.currentIndex);\n            this.playing = false;\n            if (this.lazyLoad) {\n                this.slidesList.find((s, i) => i === (this.currentIndex + 1) % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === (this.currentIndex - 1 + this.slidesList.length) % this.slidesList.length).load = true;\n                this.slidesList.find((s, i) => i === this.currentIndex).load = true;\n            }\n            this.renderer.setStyle(this.carouselList.nativeElement, 'transform', translation);\n            animation.destroy();\n        });\n        animation.play();\n    }\n    resetSlides(slides) {\n        this.slidesList.reset(this.slidesList.toArray().slice(0, slides));\n    }\n    resetTimer(value) {\n        this.timer$ = interval(value);\n    }\n    startTimer(autoplay) {\n        if (!autoplay) {\n            return;\n        }\n        this.timer$\n            .pipe(takeUntil(this.timerStop$), takeUntil(this.destroy$), filter(() => this.isVisible()))\n            .subscribe(() => {\n            this.listKeyManager.withWrap(true).setNextItemActive();\n            this.listKeyManager.withWrap(this.loop);\n        });\n    }\n    stopTimer() {\n        this.timerStop$.next();\n    }\n}\n/** @nocollapse */ MatCarouselComponent.ɵfac = function MatCarouselComponent_Factory(t) { return new (t || MatCarouselComponent)(i0.ɵɵdirectiveInject(i1$1.AnimationBuilder), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID)); };\n/** @nocollapse */ MatCarouselComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MatCarouselComponent, selectors: [[\"mat-carousel\"]], contentQueries: function MatCarouselComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatCarouselSlideComponent, 4);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slidesList = _t);\n        }\n    }, viewQuery: function MatCarouselComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n            i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carouselContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carouselList = _t.first);\n        }\n    }, hostBindings: function MatCarouselComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵlistener(\"keyup\", function MatCarouselComponent_keyup_HostBindingHandler($event) { return ctx.onKeyUp($event); })(\"mouseenter\", function MatCarouselComponent_mouseenter_HostBindingHandler() { return ctx.onMouseEnter(); })(\"mouseleave\", function MatCarouselComponent_mouseleave_HostBindingHandler() { return ctx.onMouseLeave(); })(\"mousewheel\", function MatCarouselComponent_mousewheel_HostBindingHandler($event) { return ctx.onMouseWheel($event); })(\"resize\", function MatCarouselComponent_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, i0.ɵɵresolveWindow);\n        }\n    }, inputs: { timings: \"timings\", lazyLoad: \"lazyLoad\", svgIconOverrides: \"svgIconOverrides\", autoplay: \"autoplay\", interval: \"interval\", loop: \"loop\", hideArrows: \"hideArrows\", hideIndicators: \"hideIndicators\", ariaLabel: \"ariaLabel\", color: \"color\", maxWidth: \"maxWidth\", maintainAspectRatio: \"maintainAspectRatio\", proportion: \"proportion\", slideHeight: \"slideHeight\", slides: \"slides\", useKeyboard: \"useKeyboard\", useMouseWheel: \"useMouseWheel\", orientation: \"orientation\" }, outputs: { changeEmitter: \"changeEmitter\" }, decls: 8, vars: 13, consts: [[\"tabindex\", \"0\", 1, \"carousel\"], [\"carouselContainer\", \"\"], [\"role\", \"listbox\", 1, \"carousel-list\"], [\"carouselList\", \"\"], [\"class\", \"carousel-slide\", \"role\", \"option\", 3, \"padding-bottom\", \"height\", \"panleft\", \"panright\", \"panend\", \"pancancel\", 4, \"ngFor\", \"ngForOf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Previous slide\", 3, \"color\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Next slide\", 3, \"color\", \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"carousel-indicators\", \"tabindex\", \"-1\", 3, \"flex-direction\", 4, \"ngIf\"], [\"role\", \"option\", 1, \"carousel-slide\", 3, \"panleft\", \"panright\", \"panend\", \"pancancel\"], [\"carouselSlide\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Previous slide\", 3, \"color\", \"disabled\", \"click\"], [3, \"svgIcon\", 4, \"ngIf\", \"ngIfElse\"], [\"defaultArrowBack\", \"\"], [3, \"svgIcon\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-label\", \"Next slide\", 3, \"color\", \"disabled\", \"click\"], [\"defaultArrowForward\", \"\"], [\"tabindex\", \"-1\", 1, \"carousel-indicators\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"mat-mini-fab\", \"\", 3, \"color\", \"disabled\", \"click\", \"focus\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"mat-mini-fab\", \"\", 3, \"color\", \"disabled\", \"click\", \"focus\"]], template: function MatCarouselComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"ul\", 2, 3);\n            i0.ɵɵtemplate(4, MatCarouselComponent_li_4_Template, 3, 5, \"li\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(5, MatCarouselComponent_button_5_Template, 4, 4, \"button\", 5);\n            i0.ɵɵtemplate(6, MatCarouselComponent_button_6_Template, 4, 4, \"button\", 6);\n            i0.ɵɵtemplate(7, MatCarouselComponent_div_7_Template, 2, 3, \"div\", 7);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵstyleProp(\"max-width\", ctx.maxWidth)(\"height\", !ctx.maintainAspectRatio ? \"100%\" : \"auto\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵstyleProp(\"flex-direction\", ctx.orientation === \"rtl\" ? \"row-reverse\" : \"row\")(\"height\", !ctx.maintainAspectRatio ? \"100%\" : \"auto\");\n            i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.slidesList);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.hideArrows);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.hideArrows);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.hideIndicators);\n        }\n    }, dependencies: [i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i3.MatIconButton, i3.MatMiniFabButton, i4.MatIcon], styles: [\".carousel[_ngcontent-%COMP%]{width:100%;position:relative;overflow:hidden;outline:none}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{position:absolute;z-index:1;top:50%;transform:translateY(-50%)}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:first-of-type{left:30px}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:last-of-type{right:30px}.carousel-list[_ngcontent-%COMP%]{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide[_ngcontent-%COMP%]{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide[_ngcontent-%COMP%]:hover{cursor:grab}.carousel-indicators[_ngcontent-%COMP%]{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;transform:translate(-50%);outline:none}.carousel-indicators[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{width:10px;height:10px;margin:7.5px}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselComponent, [{\n            type: Component,\n            args: [{ selector: 'mat-carousel', template: \"<div\\n  #carouselContainer\\n  class=\\\"carousel\\\"\\n  tabindex=\\\"0\\\"\\n  [style.max-width]=\\\"maxWidth\\\"\\n  [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n>\\n  <ul\\n    #carouselList\\n    class=\\\"carousel-list\\\"\\n    role=\\\"listbox\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n    [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n  >\\n    <li\\n      #carouselSlide\\n      *ngFor=\\\"let slide of slidesList\\\"\\n      class=\\\"carousel-slide\\\"\\n      role=\\\"option\\\"\\n      [style.padding-bottom]=\\\"maintainAspectRatio && proportion ? proportion + '%': '0px'\\\"\\n      [style.height]=\\\"!maintainAspectRatio && slideHeight ? slideHeight : '0px'\\\"\\n      (panleft)=\\\"onPan($event, carouselSlide)\\\"\\n      (panright)=\\\"onPan($event, carouselSlide)\\\"\\n      (panend)=\\\"onPanEnd($event, carouselSlide)\\\"\\n      (pancancel)=\\\"onPanEnd($event, carouselSlide)\\\"\\n    >\\n      <ng-container *ngIf=\\\"slide.load\\\" [ngTemplateOutlet]=\\\"slide.templateRef\\\"></ng-container>\\n    </li>\\n  </ul>\\n\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Previous slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == 0\\\"\\n    (click)=\\\"previous()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowBack; else: defaultArrowBack\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowBack\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowBack>\\n      <mat-icon>arrow_back</mat-icon>\\n    </ng-template>\\n  </button>\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Next slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == slidesList.length - 1\\\"\\n    (click)=\\\"next()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowForward; else: defaultArrowForward\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowForward\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowForward>\\n      <mat-icon>arrow_forward</mat-icon>\\n    </ng-template>\\n  </button>\\n\\n  <div\\n    *ngIf=\\\"!hideIndicators\\\"\\n    class=\\\"carousel-indicators\\\"\\n    tabindex=\\\"-1\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n  >\\n    <button\\n      *ngFor=\\\"let slide of slidesList; let i = index\\\"\\n      type=\\\"button\\\"\\n      tabindex=\\\"-1\\\"\\n      mat-mini-fab\\n      [color]=\\\"color\\\"\\n      [attr.aria-label]=\\\"'Slide #' + i\\\"\\n      [disabled]=\\\"i == currentIndex\\\"\\n      (click)=\\\"slideTo(i)\\\"\\n      (focus)=\\\"carouselContainer.focus()\\\"\\n    ></button>\\n  </div>\\n</div>\\n\", styles: [\".carousel{width:100%;position:relative;overflow:hidden;outline:none}.carousel>button{position:absolute;z-index:1;top:50%;transform:translateY(-50%)}.carousel>button:first-of-type{left:30px}.carousel>button:last-of-type{right:30px}.carousel-list{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide:hover{cursor:grab}.carousel-indicators{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;transform:translate(-50%);outline:none}.carousel-indicators>button{width:10px;height:10px;margin:7.5px}\\n\"] }]\n        }], function () {\n        return [{ type: i1$1.AnimationBuilder }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, { timings: [{\n                type: Input\n            }], lazyLoad: [{\n                type: Input\n            }], svgIconOverrides: [{\n                type: Input\n            }], autoplay: [{\n                type: Input\n            }], interval: [{\n                type: Input\n            }], loop: [{\n                type: Input\n            }], hideArrows: [{\n                type: Input\n            }], hideIndicators: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], maxWidth: [{\n                type: Input\n            }], maintainAspectRatio: [{\n                type: Input\n            }], proportion: [{\n                type: Input\n            }], slideHeight: [{\n                type: Input\n            }], slides: [{\n                type: Input\n            }], useKeyboard: [{\n                type: Input\n            }], useMouseWheel: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], changeEmitter: [{\n                type: Output\n            }], slidesList: [{\n                type: ContentChildren,\n                args: [MatCarouselSlideComponent]\n            }], carouselContainer: [{\n                type: ViewChild,\n                args: ['carouselContainer']\n            }], carouselList: [{\n                type: ViewChild,\n                args: ['carouselList']\n            }], onKeyUp: [{\n                type: HostListener,\n                args: ['keyup', ['$event']]\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }], onMouseWheel: [{\n                type: HostListener,\n                args: ['mousewheel', ['$event']]\n            }], onResize: [{\n                type: HostListener,\n                args: ['window:resize', ['$event']]\n            }] });\n})();\n\nclass MatCarouselHammerConfig extends HammerGestureConfig {\n    constructor() {\n        super(...arguments);\n        this.overrides = {\n            pinch: { enable: false },\n            rotate: { enable: false }\n        };\n    }\n}\n/** @nocollapse */ MatCarouselHammerConfig.ɵfac = /** @pureOrBreakMyCode */ function () { let ɵMatCarouselHammerConfig_BaseFactory; return function MatCarouselHammerConfig_Factory(t) { return (ɵMatCarouselHammerConfig_BaseFactory || (ɵMatCarouselHammerConfig_BaseFactory = i0.ɵɵgetInheritedFactory(MatCarouselHammerConfig)))(t || MatCarouselHammerConfig); }; }();\n/** @nocollapse */ MatCarouselHammerConfig.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: MatCarouselHammerConfig, factory: MatCarouselHammerConfig.ɵfac });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselHammerConfig, [{\n            type: Injectable\n        }], null, null);\n})();\nclass MatCarouselModule {\n    static forRoot() {\n        return {\n            ngModule: MatCarouselModule,\n            providers: [\n                { provide: HAMMER_GESTURE_CONFIG, useClass: MatCarouselHammerConfig }\n            ]\n        };\n    }\n}\n/** @nocollapse */ MatCarouselModule.ɵfac = function MatCarouselModule_Factory(t) { return new (t || MatCarouselModule)(); };\n/** @nocollapse */ MatCarouselModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: MatCarouselModule });\n/** @nocollapse */ MatCarouselModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCarouselModule, [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatCarouselComponent, MatCarouselSlideComponent],\n                    imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule],\n                    exports: [MatCarouselComponent, MatCarouselSlideComponent]\n                }]\n        }], null, null);\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(MatCarouselModule, { declarations: [MatCarouselComponent, MatCarouselSlideComponent], imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule], exports: [MatCarouselComponent, MatCarouselSlideComponent] }); })();\n\n/*\n * Public API Surface of mat-carousel\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCarouselComponent, MatCarouselHammerConfig, MatCarouselModule, MatCarouselSlideComponent };\n//# sourceMappingURL=ng-mat-carousel.mjs.map\n","map":null,"preliminaryFileName":"ng-mat-carousel.mjs","sourcemapFileName":"ng-mat-carousel.mjs.map"},{"fileName":"ng-mat-carousel.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"ng-mat-carousel.mjs\",\"sources\":[\"../../../projects/carousel/src/lib/carousel-slide/carousel-slide.component.html\",\"../../../projects/carousel/src/lib/carousel-slide/carousel-slide.component.ts\",\"../../../projects/carousel/src/lib/carousel.component.html\",\"../../../projects/carousel/src/lib/carousel.component.ts\",\"../../../projects/carousel/src/lib/carousel.module.ts\",\"../../../projects/carousel/src/public_api.ts\",\"../../../projects/carousel/src/ng-mat-carousel.ts\"],\"sourcesContent\":[\"<ng-template>\\n  <div class=\\\"carousel-slide\\\" [style.background-image]=\\\"image\\\">\\n    <div class=\\\"carousel-slide-content\\\"><ng-content></ng-content></div>\\n    <div\\n      *ngIf=\\\"!hideOverlay\\\"\\n      class=\\\"carousel-slide-overlay\\\"\\n      [attr.aria-label] = \\\"ariaLabel\\\"\\n      [style.background-color]=\\\"overlayColor\\\"\\n    ></div>\\n  </div>\\n</ng-template>\\n\",\"import { ListKeyManagerOption } from '@angular/cdk/a11y';\\nimport {\\n  Component,\\n  Input,\\n  OnInit,\\n  TemplateRef,\\n  ViewChild\\n} from '@angular/core';\\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\\n\\nimport { MatCarouselSlide } from './carousel-slide';\\n\\n@Component({\\n  selector: 'mat-carousel-slide',\\n  templateUrl: './carousel-slide.component.html',\\n  styleUrls: ['./carousel-slide.component.scss']\\n})\\nexport class MatCarouselSlideComponent\\n  implements ListKeyManagerOption, MatCarouselSlide, OnInit {\\n  @Input() public image: SafeStyle;\\n  @Input() public overlayColor = '#00000040';\\n  @Input() public hideOverlay = false;\\n  @Input() public ariaLabel = '';\\n  @Input() public disabled = false; // implements ListKeyManagerOption\\n  @Input() public load = false;\\n\\n  @ViewChild(TemplateRef) public templateRef: TemplateRef<any>;\\n\\n  constructor(public sanitizer: DomSanitizer) {\\n  }\\n\\n  public ngOnInit(): void {\\n    if (this.image) {\\n      this.image = this.sanitizer.bypassSecurityTrustStyle(`url(\\\"${this.image}\\\")`);\\n    }\\n  }\\n}\\n\",\"<div\\n  #carouselContainer\\n  class=\\\"carousel\\\"\\n  tabindex=\\\"0\\\"\\n  [style.max-width]=\\\"maxWidth\\\"\\n  [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n>\\n  <ul\\n    #carouselList\\n    class=\\\"carousel-list\\\"\\n    role=\\\"listbox\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n    [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\n  >\\n    <li\\n      #carouselSlide\\n      *ngFor=\\\"let slide of slidesList\\\"\\n      class=\\\"carousel-slide\\\"\\n      role=\\\"option\\\"\\n      [style.padding-bottom]=\\\"maintainAspectRatio && proportion ? proportion + '%': '0px'\\\"\\n      [style.height]=\\\"!maintainAspectRatio && slideHeight ? slideHeight : '0px'\\\"\\n      (panleft)=\\\"onPan($event, carouselSlide)\\\"\\n      (panright)=\\\"onPan($event, carouselSlide)\\\"\\n      (panend)=\\\"onPanEnd($event, carouselSlide)\\\"\\n      (pancancel)=\\\"onPanEnd($event, carouselSlide)\\\"\\n    >\\n      <ng-container *ngIf=\\\"slide.load\\\" [ngTemplateOutlet]=\\\"slide.templateRef\\\"></ng-container>\\n    </li>\\n  </ul>\\n\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Previous slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == 0\\\"\\n    (click)=\\\"previous()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowBack; else: defaultArrowBack\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowBack\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowBack>\\n      <mat-icon>arrow_back</mat-icon>\\n    </ng-template>\\n  </button>\\n  <button\\n    *ngIf=\\\"!hideArrows\\\"\\n    mat-icon-button\\n    type=\\\"button\\\"\\n    tabindex=\\\"-1\\\"\\n    aria-label=\\\"Next slide\\\"\\n    [color]=\\\"color\\\"\\n    [disabled]=\\\"!loop && currentIndex == slidesList.length - 1\\\"\\n    (click)=\\\"next()\\\"\\n  >\\n    <mat-icon\\n      *ngIf=\\\"svgIconOverrides?.arrowForward; else: defaultArrowForward\\\"\\n      [svgIcon]=\\\"svgIconOverrides.arrowForward\\\"\\n    ></mat-icon>\\n    <ng-template #defaultArrowForward>\\n      <mat-icon>arrow_forward</mat-icon>\\n    </ng-template>\\n  </button>\\n\\n  <div\\n    *ngIf=\\\"!hideIndicators\\\"\\n    class=\\\"carousel-indicators\\\"\\n    tabindex=\\\"-1\\\"\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\n  >\\n    <button\\n      *ngFor=\\\"let slide of slidesList; let i = index\\\"\\n      type=\\\"button\\\"\\n      tabindex=\\\"-1\\\"\\n      mat-mini-fab\\n      [color]=\\\"color\\\"\\n      [attr.aria-label]=\\\"'Slide #' + i\\\"\\n      [disabled]=\\\"i == currentIndex\\\"\\n      (click)=\\\"slideTo(i)\\\"\\n      (focus)=\\\"carouselContainer.focus()\\\"\\n    ></button>\\n  </div>\\n</div>\\n\",\"import { animate, style, AnimationBuilder } from '@angular/animations';\\nimport { ListKeyManager } from '@angular/cdk/a11y';\\nimport { isPlatformBrowser } from '@angular/common';\\nimport {\\n  AfterContentInit,\\n  AfterViewInit,\\n  Component,\\n  ContentChildren,\\n  ElementRef,\\n  EventEmitter,\\n  HostListener,\\n  Inject,\\n  Input,\\n  OnDestroy,\\n  Output,\\n  PLATFORM_ID,\\n  QueryList,\\n  Renderer2,\\n  ViewChild\\n} from '@angular/core';\\nimport { ThemePalette } from '@angular/material/core';\\nimport { interval, BehaviorSubject, Observable, Subject } from 'rxjs';\\nimport { filter, takeUntil } from 'rxjs/operators';\\n\\nimport { MatCarousel, Orientation, SvgIconOverrides } from './carousel';\\nimport { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';\\n\\nenum Direction {\\n  left,\\n  right,\\n  index\\n}\\n\\n@Component({\\n  selector: 'mat-carousel',\\n  templateUrl: './carousel.component.html',\\n  styleUrls: ['./carousel.component.scss']\\n})\\nexport class MatCarouselComponent\\n  implements AfterContentInit, AfterViewInit, MatCarousel, OnDestroy {\\n  @Input() public timings = '250ms ease-in';\\n  @Input() public lazyLoad = false;\\n  @Input() public svgIconOverrides: SvgIconOverrides;\\n\\n  @Input()\\n  public set autoplay(value: boolean) {\\n    this.autoplay$.next(value);\\n    this._autoplay = value;\\n  }\\n\\n  @Input()\\n  public set interval(value: number) {\\n    this.interval$.next(value);\\n  }\\n\\n  public get loop(): boolean {\\n    return this._loop;\\n  }\\n  @Input()\\n  public set loop(value: boolean) {\\n    this.loop$.next(value);\\n    this._loop = value;\\n  }\\n\\n  @Input() public hideArrows = true;\\n  @Input() public hideIndicators = true;\\n  @Input() public ariaLabel = 'Sliding carousel';\\n  @Input() public color: ThemePalette = 'accent';\\n\\n  public get maxWidth(): string {\\n    return this._maxWidth;\\n  }\\n  @Input()\\n  public set maxWidth(value: string) {\\n    this._maxWidth = value;\\n    this.maxWidth$.next();\\n  }\\n\\n  @Input() public maintainAspectRatio = true;\\n  @Input() public proportion = 25;\\n  @Input() public slideHeight = '100%';\\n\\n  @Input()\\n  public set slides(value: number) {\\n    this.slides$.next(value);\\n  }\\n\\n  @Input() public useKeyboard = false;\\n  @Input() public useMouseWheel = false;\\n\\n  public get orientation(): Orientation {\\n    return this._orientation;\\n  }\\n  @Input()\\n  public set orientation(value: Orientation) {\\n    this.orientation$.next(value);\\n    this._orientation = value;\\n  }\\n\\n  @Output()\\n  public changeEmitter: EventEmitter<number> = new EventEmitter<number>();\\n\\n  public get currentIndex(): number {\\n    if (this.listKeyManager) {\\n      return this.listKeyManager.activeItemIndex;\\n    }\\n\\n    return 0;\\n  }\\n  public get currentSlide(): MatCarouselSlideComponent {\\n    if (this.listKeyManager) {\\n      return this.listKeyManager.activeItem;\\n    }\\n\\n    return null;\\n  }\\n\\n  @ContentChildren(MatCarouselSlideComponent) public slidesList: QueryList<\\n    MatCarouselSlideComponent\\n  >;\\n  @ViewChild('carouselContainer') private carouselContainer: ElementRef<\\n    HTMLDivElement\\n  >;\\n  @ViewChild('carouselList') private carouselList: ElementRef<HTMLElement>;\\n  public listKeyManager: ListKeyManager<MatCarouselSlideComponent>;\\n\\n  private _autoplay = true;\\n  private autoplay$ = new Subject<boolean>();\\n\\n  private interval$ = new BehaviorSubject<number>(5000);\\n  private slides$ = new BehaviorSubject<number>(null);\\n\\n  private _maxWidth = 'auto';\\n  private maxWidth$ = new Subject<never>();\\n\\n  private _loop = true;\\n  private loop$ = new Subject<boolean>();\\n\\n  private _orientation: Orientation = 'ltr';\\n  private orientation$ = new Subject<Orientation>();\\n\\n  private timer$: Observable<number>;\\n  private timerStop$ = new Subject<never>();\\n\\n  private destroy$ = new Subject<never>();\\n  private playing = false;\\n\\n  private width: number;\\n\\n  constructor(\\n    private animationBuilder: AnimationBuilder,\\n    private renderer: Renderer2,\\n    @Inject(PLATFORM_ID) private platformId\\n  ) {}\\n\\n  @HostListener('keyup', ['$event'])\\n  public onKeyUp(event: KeyboardEvent): void {\\n    if (this.useKeyboard && !this.playing) {\\n      this.listKeyManager.onKeydown(event);\\n    }\\n  }\\n\\n  @HostListener('mouseenter')\\n  public onMouseEnter(): void {\\n    this.stopTimer();\\n  }\\n\\n  @HostListener('mouseleave')\\n  public onMouseLeave(): void {\\n    this.startTimer(this._autoplay);\\n  }\\n\\n  @HostListener('mousewheel', ['$event'])\\n  public onMouseWheel(event: WheelEvent): void {\\n    if (this.useMouseWheel) {\\n      event.preventDefault(); // prevent window to scroll\\n      const deltaY = Math.sign(event.deltaY);\\n\\n      if (deltaY > 0) {\\n        this.next();\\n      } else if (deltaY < 0) {\\n        this.previous();\\n      }\\n    }\\n  }\\n\\n  @HostListener('window:resize', ['$event'])\\n  public onResize(event: Event): void {\\n    // Reset carousel when width is resized\\n    // in order to avoid major glitches.\\n    const w = this.getWidth();\\n    if (w !== this.width) {\\n      this.width = w;\\n      this.slideTo(0);\\n    }\\n  }\\n\\n  public ngAfterContentInit(): void {\\n    if (!this.lazyLoad) {\\n      this.slidesList.forEach( (slide) => slide.load = true );\\n    } else {\\n      this.slidesList.first.load = true;\\n      setTimeout( () => {\\n        this.slidesList.find( (s, i) => i === 1 % this.slidesList.length).load = true;\\n        this.slidesList.find( (s, i) => i === (this.slidesList.length - 1) % this.slidesList.length).load = true;\\n      }, this.interval$.getValue() / 2);\\n    }\\n\\n    this.listKeyManager = new ListKeyManager(this.slidesList)\\n      .withVerticalOrientation(false)\\n      .withHorizontalOrientation(this._orientation)\\n      .withWrap(this._loop);\\n\\n    this.listKeyManager.updateActiveItem(0);\\n\\n    this.listKeyManager.change\\n      .pipe(takeUntil(this.destroy$))\\n      .subscribe(() => this.playAnimation());\\n  }\\n\\n  public ngAfterViewInit(): void {\\n    this.width = this.getWidth();\\n\\n    this.autoplay$.pipe(takeUntil(this.destroy$)).subscribe(value => {\\n      this.stopTimer();\\n      this.startTimer(value);\\n    });\\n\\n    this.interval$.pipe(takeUntil(this.destroy$)).subscribe(value => {\\n      this.stopTimer();\\n      this.resetTimer(value);\\n      this.startTimer(this._autoplay);\\n    });\\n\\n    this.maxWidth$\\n      .pipe(takeUntil(this.destroy$))\\n      .subscribe(() => this.slideTo(0));\\n\\n    this.loop$\\n      .pipe(takeUntil(this.destroy$))\\n      .subscribe(value => this.listKeyManager.withWrap(value));\\n\\n    this.orientation$\\n      .pipe(takeUntil(this.destroy$))\\n      .subscribe(value => this.listKeyManager.withHorizontalOrientation(value));\\n\\n    this.slides$\\n      .pipe(\\n        takeUntil(this.destroy$),\\n        filter(value => value && value < this.slidesList.length)\\n      )\\n      .subscribe(value => this.resetSlides(value));\\n  }\\n\\n  public ngOnDestroy(): void {\\n    this.destroy$.next();\\n    this.destroy$.complete();\\n  }\\n\\n  public next(): void {\\n    this.goto(Direction.right);\\n  }\\n\\n  public previous(): void {\\n    this.goto(Direction.left);\\n  }\\n\\n  public slideTo(index: number): void {\\n    this.goto(Direction.index, index);\\n  }\\n\\n  public onPan(event: any, slideElem: HTMLElement): void {\\n    // https://github.com/angular/angular/issues/10541#issuecomment-346539242\\n    // if y velocity is greater, it's a panup/pandown, so ignore.\\n    if (Math.abs(event.velocityY) > Math.abs(event.velocityX)) {\\n      return;\\n    }\\n    let deltaX = event.deltaX;\\n    if (this.isOutOfBounds()) {\\n      deltaX *= 0.2; // decelerate movement;\\n    }\\n\\n    this.renderer.setStyle(slideElem, 'cursor', 'grabbing');\\n    this.renderer.setStyle(\\n      this.carouselList.nativeElement,\\n      'transform',\\n      this.getTranslation(this.getOffset() + deltaX)\\n    );\\n  }\\n\\n  public onPanEnd(event: any, slideElem: HTMLElement): void {\\n    this.renderer.removeStyle(slideElem, 'cursor');\\n\\n    if (\\n      !this.isOutOfBounds() &&\\n      Math.abs(event.deltaX) > this.getWidth() * 0.25\\n    ) {\\n      if (event.deltaX <= 0) {\\n        this.next();\\n        return;\\n      }\\n      this.previous();\\n      return;\\n    }\\n    this.playAnimation(); // slide back, don't change current index\\n  }\\n\\n  private isOutOfBounds(): boolean {\\n    const sign = this.orientation === 'rtl' ? -1 : 1;\\n    const left =\\n      sign *\\n      (this.carouselList.nativeElement.getBoundingClientRect().left -\\n        this.carouselList.nativeElement.offsetParent.getBoundingClientRect()\\n          .left);\\n    const lastIndex = this.slidesList.length - 1;\\n    const width = -this.getWidth() * lastIndex;\\n\\n    return (\\n      (this.listKeyManager.activeItemIndex === 0 && left >= 0) ||\\n      (this.listKeyManager.activeItemIndex === lastIndex && left <= width)\\n    );\\n  }\\n\\n  private isVisible(): boolean {\\n    if (!isPlatformBrowser(this.platformId)) {\\n      return false;\\n    }\\n\\n    const elem = this.carouselContainer.nativeElement;\\n    const docViewTop = window.pageYOffset;\\n    const docViewBottom = docViewTop + window.innerHeight;\\n    const elemOffset = elem.getBoundingClientRect();\\n    const elemTop = docViewTop + elemOffset.top;\\n    const elemBottom = elemTop + elemOffset.height;\\n\\n    return elemBottom <= docViewBottom || elemTop >= docViewTop;\\n  }\\n\\n  private getOffset(): number {\\n    const offset = this.listKeyManager.activeItemIndex * this.getWidth();\\n    const sign = this.orientation === 'rtl' ? 1 : -1;\\n    return sign * offset;\\n  }\\n\\n  private getTranslation(offset: number): string {\\n    return `translateX(${offset}px)`;\\n  }\\n\\n  private getWidth(): number {\\n    return this.carouselContainer.nativeElement.clientWidth;\\n  }\\n\\n  private goto(direction: Direction, index?: number): void {\\n    if (!this.playing) {\\n      const rtl = this.orientation === 'rtl';\\n\\n      switch (direction) {\\n        case Direction.left:\\n          return rtl\\n            ? this.listKeyManager.setNextItemActive()\\n            : this.listKeyManager.setPreviousItemActive();\\n        case Direction.right:\\n          return rtl\\n            ? this.listKeyManager.setPreviousItemActive()\\n            : this.listKeyManager.setNextItemActive();\\n        case Direction.index:\\n          return this.listKeyManager.setActiveItem(index);\\n      }\\n    }\\n  }\\n\\n  private playAnimation(): void {\\n    const translation = this.getTranslation(this.getOffset());\\n    const factory = this.animationBuilder.build(\\n      animate(this.timings, style({ transform: translation }))\\n    );\\n    const animation = factory.create(this.carouselList.nativeElement);\\n\\n    animation.onStart(() => {\\n      this.playing = true;\\n    });\\n    animation.onDone(() => {\\n      this.changeEmitter.emit(this.currentIndex);\\n      this.playing = false;\\n      if (this.lazyLoad) {\\n        this.slidesList.find( (s, i) => i === (this.currentIndex + 1) % this.slidesList.length).load = true;\\n        this.slidesList.find( (s, i) => i === (this.currentIndex - 1 + this.slidesList.length)  % this.slidesList.length).load = true;\\n        this.slidesList.find( (s, i) => i === this.currentIndex).load = true;\\n      }\\n      this.renderer.setStyle(\\n        this.carouselList.nativeElement,\\n        'transform',\\n        translation\\n      );\\n      animation.destroy();\\n    });\\n    animation.play();\\n  }\\n\\n  private resetSlides(slides: number): void {\\n    this.slidesList.reset(this.slidesList.toArray().slice(0, slides));\\n  }\\n\\n  private resetTimer(value: number): void {\\n    this.timer$ = interval(value);\\n  }\\n\\n  private startTimer(autoplay: boolean): void {\\n    if (!autoplay) {\\n      return;\\n    }\\n\\n    this.timer$\\n      .pipe(\\n        takeUntil(this.timerStop$),\\n        takeUntil(this.destroy$),\\n        filter(() => this.isVisible())\\n      )\\n      .subscribe(() => {\\n        this.listKeyManager.withWrap(true).setNextItemActive();\\n        this.listKeyManager.withWrap(this.loop);\\n      });\\n  }\\n\\n  private stopTimer(): void {\\n    this.timerStop$.next();\\n  }\\n}\\n\",\"import { NgModule, ModuleWithProviders, Injectable } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { MatButtonModule } from '@angular/material/button';\\nimport { MatIconModule } from '@angular/material/icon';\\n\\nimport { MatCarouselComponent } from './carousel.component';\\nimport { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';\\nimport {\\n  HammerGestureConfig,\\n  HAMMER_GESTURE_CONFIG,\\n  HammerModule\\n} from '@angular/platform-browser';\\n\\n@Injectable()\\nexport class MatCarouselHammerConfig extends HammerGestureConfig {\\n  overrides = {\\n    pinch: { enable: false },\\n    rotate: { enable: false }\\n  };\\n}\\n@NgModule({\\n  declarations: [MatCarouselComponent, MatCarouselSlideComponent],\\n  imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule],\\n  exports: [MatCarouselComponent, MatCarouselSlideComponent]\\n})\\nexport class MatCarouselModule {\\n  static forRoot(): ModuleWithProviders<MatCarouselModule> {\\n    return {\\n      ngModule: MatCarouselModule,\\n      providers: [\\n        { provide: HAMMER_GESTURE_CONFIG, useClass: MatCarouselHammerConfig }\\n      ]\\n    };\\n  }\\n}\\n\",\"/*\\n * Public API Surface of mat-carousel\\n */\\n\\nexport * from './lib/carousel.component';\\nexport * from './lib/carousel.module';\\nexport * from './lib/carousel';\\n\\nexport * from './lib/carousel-slide/carousel-slide.component';\\nexport * from './lib/carousel-slide/carousel-slide';\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public_api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}]}